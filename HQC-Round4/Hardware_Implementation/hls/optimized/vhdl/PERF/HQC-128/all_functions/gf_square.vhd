-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gf_square is
port (
    ap_ready : OUT STD_LOGIC;
    a_V : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of gf_square is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal tmp_32_fu_78_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_70_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_62_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal s_V_fu_58_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_fu_128_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_120_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_34_fu_112_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_86_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln_fu_136_p8 : STD_LOGIC_VECTOR (6 downto 0);
    signal or_ln719_7_fu_94_p8 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln1_fu_162_p9 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln841_fu_182_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln841_9_fu_204_p9 : STD_LOGIC_VECTOR (9 downto 0);
    signal xor_ln719_fu_260_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln717_fu_158_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln841_s_fu_240_p9 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln719_32_fu_270_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln717_2_fu_154_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln719_33_fu_276_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln719_fu_266_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal xor_ln719_34_fu_282_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_s_fu_288_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln719_1_fu_298_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_fu_310_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln209_44_fu_330_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal and_ln719_s_fu_186_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln719_4_fu_224_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln209_45_fu_340_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln209_fu_336_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln719_8_fu_318_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln719_2_fu_322_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln209_47_fu_368_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln719_7_fu_306_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln209_48_fu_374_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln209_2_fu_380_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln_fu_352_p7 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln209_49_fu_384_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal xor_ln209_46_fu_346_p2 : STD_LOGIC_VECTOR (7 downto 0);


begin



    and_ln1_fu_162_p9 <= (((((((tmp_36_fu_128_p3 & ap_const_lv1_0) & tmp_35_fu_120_p3) & ap_const_lv1_0) & tmp_34_fu_112_p3) & ap_const_lv1_0) & tmp_33_fu_86_p3) & ap_const_lv2_0);
    and_ln719_1_fu_298_p3 <= (tmp_s_fu_288_p4 & ap_const_lv2_0);
    and_ln719_s_fu_186_p8 <= ((((((ap_const_lv1_0 & tmp_35_fu_120_p3) & ap_const_lv1_0) & tmp_34_fu_112_p3) & ap_const_lv1_0) & tmp_33_fu_86_p3) & ap_const_lv2_0);
    ap_ready <= ap_const_logic_1;
    ap_return <= (xor_ln209_49_fu_384_p2 xor xor_ln209_46_fu_346_p2);
    lshr_ln_fu_136_p8 <= ((((((tmp_36_fu_128_p3 & ap_const_lv1_0) & tmp_35_fu_120_p3) & ap_const_lv1_0) & tmp_34_fu_112_p3) & ap_const_lv1_0) & tmp_33_fu_86_p3);
    or_ln719_7_fu_94_p8 <= ((((((tmp_32_fu_78_p3 & ap_const_lv1_0) & tmp_31_fu_70_p3) & ap_const_lv1_0) & tmp_fu_62_p3) & ap_const_lv1_0) & s_V_fu_58_p1);
    or_ln_fu_352_p7 <= (((((ap_const_lv1_0 & tmp_34_fu_112_p3) & ap_const_lv1_0) & tmp_33_fu_86_p3) & ap_const_lv1_0) & tmp_s_fu_288_p4);
    s_V_fu_58_p1 <= a_V(1 - 1 downto 0);
    shl_ln719_2_fu_322_p3 <= (tmp_s_fu_288_p4 & ap_const_lv4_0);
    shl_ln841_9_fu_204_p9 <= (((((((tmp_36_fu_128_p3 & ap_const_lv1_0) & tmp_35_fu_120_p3) & ap_const_lv1_0) & tmp_34_fu_112_p3) & ap_const_lv1_0) & tmp_33_fu_86_p3) & ap_const_lv3_0);
    shl_ln841_s_fu_240_p9 <= (((((((tmp_36_fu_128_p3 & ap_const_lv1_0) & tmp_35_fu_120_p3) & ap_const_lv1_0) & tmp_34_fu_112_p3) & ap_const_lv1_0) & tmp_33_fu_86_p3) & ap_const_lv4_0);
    shl_ln_fu_310_p3 <= (tmp_s_fu_288_p4 & ap_const_lv3_0);
    tmp_31_fu_70_p3 <= a_V(2 downto 2);
    tmp_32_fu_78_p3 <= a_V(3 downto 3);
    tmp_33_fu_86_p3 <= a_V(4 downto 4);
    tmp_34_fu_112_p3 <= a_V(5 downto 5);
    tmp_35_fu_120_p3 <= a_V(6 downto 6);
    tmp_36_fu_128_p3 <= a_V(7 downto 7);
    tmp_fu_62_p3 <= a_V(1 downto 1);
    tmp_s_fu_288_p4 <= xor_ln719_34_fu_282_p2(10 downto 8);
    trunc_ln719_4_fu_224_p7 <= (((((tmp_35_fu_120_p3 & ap_const_lv1_0) & tmp_34_fu_112_p3) & ap_const_lv1_0) & tmp_33_fu_86_p3) & ap_const_lv3_0);
    xor_ln209_44_fu_330_p2 <= (or_ln719_7_fu_94_p8 xor lshr_ln_fu_136_p8);
    xor_ln209_45_fu_340_p2 <= (trunc_ln719_4_fu_224_p7 xor and_ln719_s_fu_186_p8);
    xor_ln209_46_fu_346_p2 <= (zext_ln209_fu_336_p1 xor xor_ln209_45_fu_340_p2);
    xor_ln209_47_fu_368_p2 <= (zext_ln719_8_fu_318_p1 xor shl_ln719_2_fu_322_p3);
    xor_ln209_48_fu_374_p2 <= (zext_ln719_7_fu_306_p1 xor xor_ln209_47_fu_368_p2);
    xor_ln209_49_fu_384_p2 <= (zext_ln209_2_fu_380_p1 xor or_ln_fu_352_p7);
    xor_ln719_32_fu_270_p2 <= (zext_ln717_fu_158_p1 xor shl_ln841_s_fu_240_p9);
    xor_ln719_33_fu_276_p2 <= (zext_ln717_2_fu_154_p1 xor xor_ln719_32_fu_270_p2);
    xor_ln719_34_fu_282_p2 <= (zext_ln719_fu_266_p1 xor xor_ln719_33_fu_276_p2);
    xor_ln719_fu_260_p2 <= (zext_ln841_fu_182_p1 xor shl_ln841_9_fu_204_p9);
    zext_ln209_2_fu_380_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln209_48_fu_374_p2),8));
    zext_ln209_fu_336_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln209_44_fu_330_p2),8));
    zext_ln717_2_fu_154_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_136_p8),11));
    zext_ln717_fu_158_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln719_7_fu_94_p8),11));
    zext_ln719_7_fu_306_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln719_1_fu_298_p3),7));
    zext_ln719_8_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_310_p3),7));
    zext_ln719_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln719_fu_260_p2),11));
    zext_ln841_fu_182_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln1_fu_162_p9),10));
end behav;
