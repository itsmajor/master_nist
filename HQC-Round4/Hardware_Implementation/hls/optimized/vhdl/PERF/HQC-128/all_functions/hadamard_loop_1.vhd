-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity hadamard_loop_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    src_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    src_V_ce0 : OUT STD_LOGIC;
    src_V_q0 : IN STD_LOGIC_VECTOR (9 downto 0);
    src_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    src_V_ce1 : OUT STD_LOGIC;
    src_V_q1 : IN STD_LOGIC_VECTOR (9 downto 0);
    dst_0_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_0_V_ce1 : OUT STD_LOGIC;
    dst_0_V_we1 : OUT STD_LOGIC;
    dst_0_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_1_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_1_V_ce1 : OUT STD_LOGIC;
    dst_1_V_we1 : OUT STD_LOGIC;
    dst_1_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_2_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_2_V_ce1 : OUT STD_LOGIC;
    dst_2_V_we1 : OUT STD_LOGIC;
    dst_2_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_3_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_3_V_ce1 : OUT STD_LOGIC;
    dst_3_V_we1 : OUT STD_LOGIC;
    dst_3_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_4_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_4_V_ce1 : OUT STD_LOGIC;
    dst_4_V_we1 : OUT STD_LOGIC;
    dst_4_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_5_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_5_V_ce1 : OUT STD_LOGIC;
    dst_5_V_we1 : OUT STD_LOGIC;
    dst_5_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_6_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_6_V_ce1 : OUT STD_LOGIC;
    dst_6_V_we1 : OUT STD_LOGIC;
    dst_6_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dst_7_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
    dst_7_V_ce1 : OUT STD_LOGIC;
    dst_7_V_we1 : OUT STD_LOGIC;
    dst_7_V_d1 : OUT STD_LOGIC_VECTOR (9 downto 0) );
end;


architecture behav of hadamard_loop_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal t_V_reg_301 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln887_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_404 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_V_fu_318_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_V_reg_408 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal trunc_ln180_fu_346_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln180_reg_423 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln180_reg_423_pp0_iter1_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal lshr_ln_reg_427 : STD_LOGIC_VECTOR (3 downto 0);
    signal lshr_ln_reg_427_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal src_0_V_reg_433 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal src_1_V_reg_439 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln68_fu_383_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln68_reg_445 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_phi_mux_t_V_phi_fu_305_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln544_fu_330_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_87_fu_341_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_fu_372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln180_1_fu_392_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal add_ln68_fu_360_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_fu_324_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ret_V_120_fu_335_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal xor_ln180_fu_387_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    t_V_reg_301_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_404 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                t_V_reg_301 <= i_V_reg_408;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                t_V_reg_301 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                i_V_reg_408 <= i_V_fu_318_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln887_reg_404 <= icmp_ln887_fu_312_p2;
                lshr_ln_reg_427_pp0_iter1_reg <= lshr_ln_reg_427;
                sub_ln68_reg_445 <= sub_ln68_fu_383_p2;
                trunc_ln180_reg_423_pp0_iter1_reg <= trunc_ln180_reg_423;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                lshr_ln_reg_427 <= ap_phi_mux_t_V_phi_fu_305_p4(6 downto 3);
                trunc_ln180_reg_423 <= trunc_ln180_fu_346_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln887_reg_404 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                src_0_V_reg_433 <= src_V_q0;
                src_1_V_reg_439 <= src_V_q1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln887_fu_312_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln887_fu_312_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln887_fu_312_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXX";
        end case;
    end process;
    add_ln68_fu_360_p2 <= std_logic_vector(unsigned(src_1_V_reg_439) + unsigned(src_0_V_reg_433));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(3);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln887_fu_312_p2)
    begin
        if ((icmp_ln887_fu_312_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_t_V_phi_fu_305_p4_assign_proc : process(t_V_reg_301, icmp_ln887_reg_404, ap_CS_fsm_pp0_stage0, i_V_reg_408, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln887_reg_404 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_t_V_phi_fu_305_p4 <= i_V_reg_408;
        else 
            ap_phi_mux_t_V_phi_fu_305_p4 <= t_V_reg_301;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dst_0_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_0_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_0_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_0_V_address1 <= "XXXX";
            end if;
        else 
            dst_0_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_0_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_0_V_ce1 <= ap_const_logic_1;
        else 
            dst_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_0_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_0_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_0_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_0_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_0_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_0_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_0)))) then 
            dst_0_V_we1 <= ap_const_logic_1;
        else 
            dst_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_1_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_1_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_1_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_1_V_address1 <= "XXXX";
            end if;
        else 
            dst_1_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_1_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_1_V_ce1 <= ap_const_logic_1;
        else 
            dst_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_1_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_1_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_1_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_1_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_1_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_1_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_1)))) then 
            dst_1_V_we1 <= ap_const_logic_1;
        else 
            dst_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_2_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_2_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_2_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_2_V_address1 <= "XXXX";
            end if;
        else 
            dst_2_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_2_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_2_V_ce1 <= ap_const_logic_1;
        else 
            dst_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_2_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_2_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_2_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_2_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_2_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_2_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_2)))) then 
            dst_2_V_we1 <= ap_const_logic_1;
        else 
            dst_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_3_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_3_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_3_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_3_V_address1 <= "XXXX";
            end if;
        else 
            dst_3_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_3_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_3_V_ce1 <= ap_const_logic_1;
        else 
            dst_3_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_3_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_3_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_3_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_3_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_3_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_3_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_3)))) then 
            dst_3_V_we1 <= ap_const_logic_1;
        else 
            dst_3_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_4_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_4_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_4_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_4_V_address1 <= "XXXX";
            end if;
        else 
            dst_4_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_4_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_4_V_ce1 <= ap_const_logic_1;
        else 
            dst_4_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_4_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_4_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_4_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_4_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_4_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_4_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_4)))) then 
            dst_4_V_we1 <= ap_const_logic_1;
        else 
            dst_4_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_5_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_5_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_5_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_5_V_address1 <= "XXXX";
            end if;
        else 
            dst_5_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_5_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_5_V_ce1 <= ap_const_logic_1;
        else 
            dst_5_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_5_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_5_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_5_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_5_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_5_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_5_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_5)))) then 
            dst_5_V_we1 <= ap_const_logic_1;
        else 
            dst_5_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_6_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_6_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_6_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_6_V_address1 <= "XXXX";
            end if;
        else 
            dst_6_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_6_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_6_V_ce1 <= ap_const_logic_1;
        else 
            dst_6_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_6_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_6_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_6_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_6_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_6_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_6_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_6)))) then 
            dst_6_V_we1 <= ap_const_logic_1;
        else 
            dst_6_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_7_V_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, zext_ln180_fu_372_p1, zext_ln180_1_fu_392_p1, ap_block_pp0_stage1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_7_V_address1 <= zext_ln180_1_fu_392_p1(4 - 1 downto 0);
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_7_V_address1 <= zext_ln180_fu_372_p1(4 - 1 downto 0);
            else 
                dst_7_V_address1 <= "XXXX";
            end if;
        else 
            dst_7_V_address1 <= "XXXX";
        end if; 
    end process;


    dst_7_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            dst_7_V_ce1 <= ap_const_logic_1;
        else 
            dst_7_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dst_7_V_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, sub_ln68_reg_445, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp0_stage1, add_ln68_fu_360_p2)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_1)) then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
                dst_7_V_d1 <= sub_ln68_reg_445;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                dst_7_V_d1 <= add_ln68_fu_360_p2;
            else 
                dst_7_V_d1 <= "XXXXXXXXXX";
            end if;
        else 
            dst_7_V_d1 <= "XXXXXXXXXX";
        end if; 
    end process;


    dst_7_V_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, trunc_ln180_reg_423, trunc_ln180_reg_423_pp0_iter1_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (trunc_ln180_reg_423 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (trunc_ln180_reg_423_pp0_iter1_reg = ap_const_lv3_7)))) then 
            dst_7_V_we1 <= ap_const_logic_1;
        else 
            dst_7_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_V_fu_318_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_phi_fu_305_p4) + unsigned(ap_const_lv7_1));
    icmp_ln887_fu_312_p2 <= "1" when (ap_phi_mux_t_V_phi_fu_305_p4 = ap_const_lv7_40) else "0";
    ret_V_120_fu_335_p2 <= (ret_V_fu_324_p2 or ap_const_lv7_1);
    ret_V_fu_324_p2 <= std_logic_vector(shift_left(unsigned(ap_phi_mux_t_V_phi_fu_305_p4),to_integer(unsigned('0' & ap_const_lv7_1(7-1 downto 0)))));
    src_V_address0 <= zext_ln544_fu_330_p1(7 - 1 downto 0);
    src_V_address1 <= zext_ln544_87_fu_341_p1(7 - 1 downto 0);

    src_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_V_ce0 <= ap_const_logic_1;
        else 
            src_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    src_V_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            src_V_ce1 <= ap_const_logic_1;
        else 
            src_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln68_fu_383_p2 <= std_logic_vector(unsigned(src_0_V_reg_433) - unsigned(src_1_V_reg_439));
    trunc_ln180_fu_346_p1 <= ap_phi_mux_t_V_phi_fu_305_p4(3 - 1 downto 0);
    xor_ln180_fu_387_p2 <= (lshr_ln_reg_427_pp0_iter1_reg xor ap_const_lv4_8);
    zext_ln180_1_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln180_fu_387_p2),64));
    zext_ln180_fu_372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_427),64));
    zext_ln544_87_fu_341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_120_fu_335_p2),64));
    zext_ln544_fu_330_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_324_p2),64));
end behav;
