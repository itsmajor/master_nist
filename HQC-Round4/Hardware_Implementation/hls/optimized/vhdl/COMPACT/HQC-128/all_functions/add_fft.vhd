-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity add_fft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rs_mem_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    rs_mem_1_ce0 : OUT STD_LOGIC;
    rs_mem_1_we0 : OUT STD_LOGIC;
    rs_mem_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    rs_mem_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of add_fft is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_19A : STD_LOGIC_VECTOR (9 downto 0) := "0110011010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal perm_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal perm_r_ce0 : STD_LOGIC;
    signal perm_r_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bm_pow_R_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bm_pow_R_ce0 : STD_LOGIC;
    signal bm_pow_R_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal gammas_sums_R_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal gammas_sums_R_ce0 : STD_LOGIC;
    signal gammas_sums_R_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_A_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_675 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal i_V_fu_687_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_reg_1490 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln887_fu_681_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln166_fu_709_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln166_reg_1528 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal round_V_1_fu_719_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal round_V_1_reg_1536 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln883_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_reg_1541 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_fu_713_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_741_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln_reg_1546 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_V_31_fu_755_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_31_reg_1554 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln887_28_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_V_32_fu_791_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_32_reg_1572 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln544_95_fu_797_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_95_reg_1577 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln887_30_fu_785_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln214_fu_808_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ind_2_V_1_fu_816_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln174_fu_831_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln174_reg_1597 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_V_fu_841_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_V_reg_1605 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln176_fu_847_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln176_reg_1610 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln174_fu_835_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln176_fu_855_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln176_reg_1616 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln177_fu_865_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln177_reg_1621 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln179_fu_877_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_reg_1626 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln176_2_fu_886_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln176_2_reg_1630 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln166_fu_890_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_V_34_fu_901_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_V_34_reg_1643 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln215_16_fu_907_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_16_reg_1648 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln176_fu_896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln177_1_fu_911_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln177_1_reg_1654 : STD_LOGIC_VECTOR (5 downto 0);
    signal ind_1_V_2_fu_915_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ind_2_V_2_fu_921_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_V_11_fu_936_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_V_11_reg_1672 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal lhs_V_30_fu_947_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_30_reg_1677 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln177_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_V_1_fu_957_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_V_1_reg_1686 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal shl_ln790_1_fu_967_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln790_1_reg_1691 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln887_32_fu_951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_140_fu_984_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_140_reg_1697 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_141_fu_990_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_141_reg_1702 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal trunc_ln321_1_fu_1032_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_1_reg_1717 : STD_LOGIC_VECTOR (1 downto 0);
    signal bm_pow_R_load_reg_1724 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal l_V_fu_1086_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_V_reg_1732 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ret_V_139_fu_1113_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_139_reg_1737 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln887_33_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_1122_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_8_reg_1742 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_V_33_fu_1144_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_V_33_reg_1750 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal trunc_ln1352_fu_1150_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1352_reg_1755 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln199_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_A_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_A_V_load_1_reg_1771 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_119_fu_1178_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_119_reg_1776 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_leaves_butterfly_fu_653_ap_ready : STD_LOGIC;
    signal grp_leaves_butterfly_fu_653_ap_done : STD_LOGIC;
    signal n_V_fu_1191_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_V_reg_1784 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln887_27_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_V_1_fu_1234_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln202_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_1240_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln208_reg_1802 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal round_V_fu_1254_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal round_V_reg_1810 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln210_fu_1264_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln210_reg_1815 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln208_fu_1248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln215_fu_1276_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln215_reg_1826 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_14_fu_1282_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_14_reg_1831 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln210_1_fu_1298_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln210_1_reg_1836 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_V_fu_1311_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal m_V_reg_1844 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln210_fu_1306_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln215_15_fu_1345_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_15_reg_1854 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_123_fu_1349_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_123_reg_1859 : STD_LOGIC_VECTOR (8 downto 0);
    signal big_W_V_addr_3_reg_1864 : STD_LOGIC_VECTOR (7 downto 0);
    signal ind_2_V_fu_1364_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ind_1_V_fu_1370_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_local_V_5_fu_1376_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal big_W_V_addr_5_reg_1893 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln887_31_fu_1394_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal big_W_V_addr_6_reg_1904 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_V_10_fu_1429_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_V_10_reg_1910 : STD_LOGIC_VECTOR (7 downto 0);
    signal A_local_V_6_fu_1435_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal A_local_V_6_reg_1915 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal gammas_sums_R_load_reg_1922 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_130_fu_1450_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_130_reg_1927 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_gf_mul_fu_664_ap_ready : STD_LOGIC;
    signal grp_gf_mul_fu_664_ap_done : STD_LOGIC;
    signal j_V_fu_1461_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_V_reg_1935 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln230_fu_1455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fr_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal fr_V_ce0 : STD_LOGIC;
    signal fr_V_we0 : STD_LOGIC;
    signal fr_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_A_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_A_V_ce0 : STD_LOGIC;
    signal p_A_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_A_V_ce1 : STD_LOGIC;
    signal p_A_V_we1 : STD_LOGIC;
    signal p_A_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_ce0 : STD_LOGIC;
    signal big_W_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_ce1 : STD_LOGIC;
    signal big_W_V_we1 : STD_LOGIC;
    signal big_W_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal w16_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal w16_ce0 : STD_LOGIC;
    signal w16_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal w16_ce1 : STD_LOGIC;
    signal w16_we1 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_653_ap_start : STD_LOGIC;
    signal grp_leaves_butterfly_fu_653_ap_idle : STD_LOGIC;
    signal grp_leaves_butterfly_fu_653_small_w_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_leaves_butterfly_fu_653_small_w_V_ce0 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_653_small_w_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_leaves_butterfly_fu_653_small_w_V_ce1 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_653_small_w_V_we1 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_653_small_w_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gf_mul_fu_664_ap_start : STD_LOGIC;
    signal grp_gf_mul_fu_664_ap_idle : STD_LOGIC;
    signal grp_gf_mul_fu_664_a_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gf_mul_fu_664_b_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gf_mul_fu_664_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_02419_0_reg_405 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal indvars_iv_reg_417 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_8_reg_429 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_02419_1_reg_441 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_02419_2_reg_453 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_01982_0_reg_464 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_9_reg_475 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_V_10_reg_485 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_02419_3_reg_495 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_03344_0_reg_506 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_02390_0_reg_517 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal p_02390_1_reg_529 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_02419_4_reg_540 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_02751_0_reg_551 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_02751_1_reg_563 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_V_6_reg_574 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_V_reg_586 : STD_LOGIC_VECTOR (1 downto 0);
    signal t_V_7_reg_598 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_02813_0_reg_609 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_03119_1_reg_620 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal p_03344_1_reg_630 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03344_2_reg_641 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_leaves_butterfly_fu_653_ap_start_reg : STD_LOGIC := '0';
    signal grp_gf_mul_fu_664_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln321_fu_699_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_704_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_90_fu_770_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_91_fu_775_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_89_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_103_fu_1009_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_104_fu_1027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_105_fu_1134_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_87_fu_1162_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_88_fu_1173_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_94_fu_1197_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_92_fu_1209_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_99_fu_1229_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_96_fu_1335_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_97_fu_1354_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_98_fu_1359_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_100_fu_1404_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_102_fu_1424_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_101_fu_1414_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_93_fu_1467_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_9_fu_1482_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_C_0_V_fu_170 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln321_fu_1036_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lhs_V_25_fu_174 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_26_fu_178 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_C_3_V_fu_182 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_124_fu_1383_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_142_fu_1443_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln321_fu_693_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1354_fu_731_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_118_fu_735_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln215_fu_761_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln544_fu_765_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ind_1_V_1_fu_802_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln214_fu_812_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_6_fu_822_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_135_fu_827_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln176_1_fu_851_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln177_fu_861_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln179_fu_871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_fu_882_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln887_1_fu_927_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_5_fu_942_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln790_fu_963_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln1357_fu_978_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_39_fu_996_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_133_fu_999_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_134_fu_1004_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_19_fu_1014_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_136_fu_1017_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_137_fu_1022_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln790_1_fu_1095_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln790_fu_1099_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs_V_40_fu_1104_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_138_fu_1108_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_8_fu_1122_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_fu_1154_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_117_fu_1167_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_120_fu_1202_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln202_fu_1214_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_125_fu_1224_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln210_fu_1260_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln208_1_fu_1244_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1352_1_fu_1286_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_2_fu_1290_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1352_2_fu_1317_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ret_V_121_fu_1321_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_122_fu_1329_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln887_fu_1302_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_1340_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1598_fu_1390_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_126_fu_1399_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_127_fu_1409_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_128_fu_1419_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln321_8_fu_1472_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln321_6_fu_1476_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);

    component leaves_butterfly IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        small_w_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        small_w_V_ce0 : OUT STD_LOGIC;
        small_w_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        small_w_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        small_w_V_ce1 : OUT STD_LOGIC;
        small_w_V_we1 : OUT STD_LOGIC;
        small_w_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        A_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        A_1_V : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component gf_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_kem_all_fuwdI IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_perm_r IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component add_fft_bm_pow_R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_gammas_suxdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_fr_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_p_A_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_big_W_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_w16 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    perm_r_U : component add_fft_perm_r
    generic map (
        DataWidth => 5,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => perm_r_address0,
        ce0 => perm_r_ce0,
        q0 => perm_r_q0);

    bm_pow_R_U : component add_fft_bm_pow_R
    generic map (
        DataWidth => 8,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bm_pow_R_address0,
        ce0 => bm_pow_R_ce0,
        q0 => bm_pow_R_q0);

    gammas_sums_R_U : component add_fft_gammas_suxdS
    generic map (
        DataWidth => 8,
        AddressRange => 240,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gammas_sums_R_address0,
        ce0 => gammas_sums_R_ce0,
        q0 => gammas_sums_R_q0);

    fr_V_U : component add_fft_fr_V
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fr_V_address0,
        ce0 => fr_V_ce0,
        we0 => fr_V_we0,
        d0 => p_A_V_q0,
        q0 => fr_V_q0);

    p_A_V_U : component add_fft_p_A_V
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_A_V_address0,
        ce0 => p_A_V_ce0,
        q0 => p_A_V_q0,
        address1 => p_A_V_address1,
        ce1 => p_A_V_ce1,
        we1 => p_A_V_we1,
        d1 => p_A_V_d1,
        q1 => p_A_V_q1);

    big_W_V_U : component add_fft_big_W_V
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => big_W_V_address0,
        ce0 => big_W_V_ce0,
        q0 => big_W_V_q0,
        address1 => big_W_V_address1,
        ce1 => big_W_V_ce1,
        we1 => big_W_V_we1,
        d1 => big_W_V_d1,
        q1 => big_W_V_q1);

    w16_U : component add_fft_w16
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w16_address0,
        ce0 => w16_ce0,
        q0 => w16_q0,
        address1 => grp_leaves_butterfly_fu_653_small_w_V_address1,
        ce1 => w16_ce1,
        we1 => w16_we1,
        d1 => grp_leaves_butterfly_fu_653_small_w_V_d1);

    grp_leaves_butterfly_fu_653 : component leaves_butterfly
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_leaves_butterfly_fu_653_ap_start,
        ap_done => grp_leaves_butterfly_fu_653_ap_done,
        ap_idle => grp_leaves_butterfly_fu_653_ap_idle,
        ap_ready => grp_leaves_butterfly_fu_653_ap_ready,
        small_w_V_address0 => grp_leaves_butterfly_fu_653_small_w_V_address0,
        small_w_V_ce0 => grp_leaves_butterfly_fu_653_small_w_V_ce0,
        small_w_V_q0 => w16_q0,
        small_w_V_address1 => grp_leaves_butterfly_fu_653_small_w_V_address1,
        small_w_V_ce1 => grp_leaves_butterfly_fu_653_small_w_V_ce1,
        small_w_V_we1 => grp_leaves_butterfly_fu_653_small_w_V_we1,
        small_w_V_d1 => grp_leaves_butterfly_fu_653_small_w_V_d1,
        A_0_V => reg_675,
        A_1_V => p_A_V_load_1_reg_1771);

    grp_gf_mul_fu_664 : component gf_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gf_mul_fu_664_ap_start,
        ap_done => grp_gf_mul_fu_664_ap_done,
        ap_idle => grp_gf_mul_fu_664_ap_idle,
        ap_ready => grp_gf_mul_fu_664_ap_ready,
        a_V => grp_gf_mul_fu_664_a_V,
        b_V => grp_gf_mul_fu_664_b_V,
        ap_return => grp_gf_mul_fu_664_ap_return);

    crypto_kem_all_fuwdI_U85 : component crypto_kem_all_fuwdI
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => p_C_0_V_fu_170,
        din1 => ret_V_140_reg_1697,
        din2 => ret_V_141_reg_1702,
        din3 => p_C_3_V_fu_182,
        din4 => tmp_8_fu_1122_p5,
        dout => tmp_8_fu_1122_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_gf_mul_fu_664_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gf_mul_fu_664_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_gf_mul_fu_664_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gf_mul_fu_664_ap_ready = ap_const_logic_1)) then 
                    grp_gf_mul_fu_664_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_leaves_butterfly_fu_653_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_leaves_butterfly_fu_653_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_leaves_butterfly_fu_653_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_leaves_butterfly_fu_653_ap_ready = ap_const_logic_1)) then 
                    grp_leaves_butterfly_fu_653_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvars_iv_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_681_p2 = ap_const_lv1_1))) then 
                indvars_iv_reg_417 <= ap_const_lv3_4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_835_p2 = ap_const_lv1_1))) then 
                indvars_iv_reg_417 <= add_ln166_fu_890_p2;
            end if; 
        end if;
    end process;

    lhs_V_25_fu_174_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1717 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1626 = ap_const_lv1_0))) then 
                lhs_V_25_fu_174 <= grp_gf_mul_fu_664_ap_return;
            elsif (((trunc_ln321_fu_1036_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1626 = ap_const_lv1_1))) then 
                lhs_V_25_fu_174 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    lhs_V_26_fu_178_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1717 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1626 = ap_const_lv1_0))) then 
                lhs_V_26_fu_178 <= grp_gf_mul_fu_664_ap_return;
            elsif (((trunc_ln321_fu_1036_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1626 = ap_const_lv1_1))) then 
                lhs_V_26_fu_178 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    p_01982_0_reg_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_896_p2 = ap_const_lv1_1))) then 
                p_01982_0_reg_464 <= k_V_reg_1605;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_30_fu_785_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1541 = ap_const_lv1_1)))) then 
                p_01982_0_reg_464 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_02390_0_reg_517_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                p_02390_0_reg_517 <= l_V_1_reg_1686;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_931_p2 = ap_const_lv1_0))) then 
                p_02390_0_reg_517 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_02390_1_reg_529_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_02390_1_reg_529 <= l_V_reg_1732;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_32_fu_951_p2 = ap_const_lv1_1))) then 
                p_02390_1_reg_529 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_02419_0_reg_405_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_02419_0_reg_405 <= i_V_reg_1490;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_02419_0_reg_405 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    p_02419_1_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_713_p2 = ap_const_lv1_0) and (icmp_ln883_fu_725_p2 = ap_const_lv1_0))) then 
                p_02419_1_reg_441 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_02419_1_reg_441 <= i_V_31_reg_1554;
            end if; 
        end if;
    end process;

    p_02419_2_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_28_fu_749_p2 = ap_const_lv1_1))) then 
                p_02419_2_reg_453 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                p_02419_2_reg_453 <= i_V_32_reg_1572;
            end if; 
        end if;
    end process;

    p_02419_3_reg_495_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_931_p2 = ap_const_lv1_1))) then 
                p_02419_3_reg_495 <= i_V_34_reg_1643;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_835_p2 = ap_const_lv1_0))) then 
                p_02419_3_reg_495 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_02419_4_reg_540_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_713_p2 = ap_const_lv1_1))) then 
                p_02419_4_reg_540 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1218_p2 = ap_const_lv1_1))) then 
                p_02419_4_reg_540 <= i_V_33_reg_1750;
            end if; 
        end if;
    end process;

    p_02751_0_reg_551_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                p_02751_0_reg_551 <= n_V_reg_1784;
            elsif (((grp_leaves_butterfly_fu_653_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                p_02751_0_reg_551 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    p_02751_1_reg_563_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln887_27_fu_1185_p2 = ap_const_lv1_1))) then 
                p_02751_1_reg_563 <= ap_const_lv6_10;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1218_p2 = ap_const_lv1_0))) then 
                p_02751_1_reg_563 <= n_V_1_fu_1234_p2;
            end if; 
        end if;
    end process;

    p_02813_0_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln887_31_fu_1394_p2 = ap_const_lv1_0))) then 
                p_02813_0_reg_609 <= m_V_reg_1844;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1248_p2 = ap_const_lv1_0))) then 
                p_02813_0_reg_609 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_03119_1_reg_620_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                p_03119_1_reg_620 <= A_local_V_6_reg_1915;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                p_03119_1_reg_620 <= A_local_V_5_fu_1376_p3;
            end if; 
        end if;
    end process;

    p_03344_0_reg_506_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln887_33_fu_1080_p2 = ap_const_lv1_1))) then 
                p_03344_0_reg_506 <= j_V_11_reg_1672;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_896_p2 = ap_const_lv1_0))) then 
                p_03344_0_reg_506 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_03344_1_reg_630_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                p_03344_1_reg_630 <= j_V_10_reg_1910;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                p_03344_1_reg_630 <= ap_const_lv8_1;
            end if; 
        end if;
    end process;

    p_03344_2_reg_641_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1248_p2 = ap_const_lv1_1))) then 
                p_03344_2_reg_641 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                p_03344_2_reg_641 <= j_V_reg_1935;
            end if; 
        end if;
    end process;

    p_C_0_V_fu_170_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1717 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1626 = ap_const_lv1_0))) then 
                p_C_0_V_fu_170 <= grp_gf_mul_fu_664_ap_return;
            elsif (((trunc_ln321_fu_1036_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1626 = ap_const_lv1_1))) then 
                p_C_0_V_fu_170 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    p_C_3_V_fu_182_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1717 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1626 = ap_const_lv1_0))) then 
                p_C_3_V_fu_182 <= grp_gf_mul_fu_664_ap_return;
            elsif (((trunc_ln321_fu_1036_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1626 = ap_const_lv1_1))) then 
                p_C_3_V_fu_182 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    t_V_10_reg_485_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_896_p2 = ap_const_lv1_1))) then 
                t_V_10_reg_485 <= ind_2_V_2_fu_921_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_30_fu_785_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1541 = ap_const_lv1_1)))) then 
                t_V_10_reg_485 <= ind_2_V_1_fu_816_p2;
            end if; 
        end if;
    end process;

    t_V_6_reg_574_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1138_p2 = ap_const_lv1_1))) then 
                t_V_6_reg_574 <= ap_const_lv4_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1306_p2 = ap_const_lv1_1))) then 
                t_V_6_reg_574 <= ind_1_V_fu_1370_p2;
            end if; 
        end if;
    end process;

    t_V_7_reg_598_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1138_p2 = ap_const_lv1_1))) then 
                t_V_7_reg_598 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1306_p2 = ap_const_lv1_1))) then 
                t_V_7_reg_598 <= round_V_reg_1810;
            end if; 
        end if;
    end process;

    t_V_8_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_681_p2 = ap_const_lv1_1))) then 
                t_V_8_reg_429 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_835_p2 = ap_const_lv1_1))) then 
                t_V_8_reg_429 <= round_V_1_reg_1536;
            end if; 
        end if;
    end process;

    t_V_9_reg_475_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_896_p2 = ap_const_lv1_1))) then 
                t_V_9_reg_475 <= ind_1_V_2_fu_915_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_30_fu_785_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1541 = ap_const_lv1_1)))) then 
                t_V_9_reg_475 <= zext_ln214_fu_808_p1;
            end if; 
        end if;
    end process;

    t_V_reg_586_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1138_p2 = ap_const_lv1_1))) then 
                t_V_reg_586 <= ap_const_lv2_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1306_p2 = ap_const_lv1_1))) then 
                t_V_reg_586 <= ind_2_V_fu_1364_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                A_local_V_6_reg_1915 <= A_local_V_6_fu_1435_p3;
                gammas_sums_R_load_reg_1922 <= gammas_sums_R_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1306_p2 = ap_const_lv1_0))) then
                big_W_V_addr_3_reg_1864 <= zext_ln544_97_fu_1354_p1(8 - 1 downto 0);
                ret_V_123_reg_1859 <= ret_V_123_fu_1349_p2;
                    zext_ln215_15_reg_1854(7 downto 0) <= zext_ln215_15_fu_1345_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln887_31_fu_1394_p2 = ap_const_lv1_1))) then
                big_W_V_addr_5_reg_1893 <= zext_ln544_100_fu_1404_p1(8 - 1 downto 0);
                big_W_V_addr_6_reg_1904 <= zext_ln544_101_fu_1414_p1(8 - 1 downto 0);
                j_V_10_reg_1910 <= j_V_10_fu_1429_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                bm_pow_R_load_reg_1724 <= bm_pow_R_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_V_31_reg_1554 <= i_V_31_fu_755_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln883_reg_1541 = ap_const_lv1_0))) then
                i_V_32_reg_1572 <= i_V_32_fu_791_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                i_V_33_reg_1750 <= i_V_33_fu_1144_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_V_34_reg_1643 <= i_V_34_fu_901_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1490 <= i_V_fu_687_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1248_p2 = ap_const_lv1_0))) then
                icmp_ln879_reg_1820 <= icmp_ln879_fu_1270_p2;
                shl_ln210_reg_1815 <= shl_ln210_fu_1264_p2;
                shl_ln215_reg_1826 <= shl_ln215_fu_1276_p2;
                    zext_ln210_1_reg_1836(5 downto 4) <= zext_ln210_1_fu_1298_p1(5 downto 4);
                    zext_ln215_14_reg_1831(7 downto 0) <= zext_ln215_14_fu_1282_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_713_p2 = ap_const_lv1_0))) then
                icmp_ln883_reg_1541 <= icmp_ln883_fu_725_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                j_V_11_reg_1672 <= j_V_11_fu_936_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                j_V_reg_1935 <= j_V_fu_1461_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                k_V_reg_1605 <= k_V_fu_841_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                l_V_1_reg_1686 <= l_V_1_fu_957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                l_V_reg_1732 <= l_V_fu_1086_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_931_p2 = ap_const_lv1_0))) then
                    lhs_V_30_reg_1677(8 downto 0) <= lhs_V_30_fu_947_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                m_V_reg_1844 <= m_V_fu_1311_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                n_V_reg_1784 <= n_V_fu_1191_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_835_p2 = ap_const_lv1_0))) then
                or_ln179_reg_1626 <= or_ln179_fu_877_p2;
                shl_ln176_reg_1616 <= shl_ln176_fu_855_p2;
                shl_ln177_reg_1621 <= shl_ln177_fu_865_p2;
                    zext_ln176_2_reg_1630(7 downto 0) <= zext_ln176_2_fu_886_p1(7 downto 0);
                    zext_ln176_reg_1610(1 downto 0) <= zext_ln176_fu_847_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                p_A_V_load_1_reg_1771 <= p_A_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state15))) then
                reg_675 <= p_A_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_leaves_butterfly_fu_653_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ret_V_119_reg_1776(7 downto 5) <= ret_V_119_fu_1178_p3(7 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_gf_mul_fu_664_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                ret_V_130_reg_1927 <= ret_V_130_fu_1450_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln887_33_fu_1080_p2 = ap_const_lv1_0))) then
                ret_V_139_reg_1737 <= ret_V_139_fu_1113_p2;
                tmp_8_reg_1742 <= tmp_8_fu_1122_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_32_fu_951_p2 = ap_const_lv1_1))) then
                ret_V_140_reg_1697 <= ret_V_140_fu_984_p2;
                ret_V_141_reg_1702 <= ret_V_141_fu_990_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                round_V_1_reg_1536 <= round_V_1_fu_719_p2;
                    zext_ln166_reg_1528(2 downto 0) <= zext_ln166_fu_709_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                round_V_reg_1810 <= round_V_fu_1254_p2;
                    zext_ln208_reg_1802(3 downto 0) <= zext_ln208_fu_1240_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_32_fu_951_p2 = ap_const_lv1_0))) then
                shl_ln790_1_reg_1691 <= shl_ln790_1_fu_967_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_713_p2 = ap_const_lv1_0) and (icmp_ln883_fu_725_p2 = ap_const_lv1_0))) then
                    shl_ln_reg_1546(6 downto 5) <= shl_ln_fu_741_p3(6 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1138_p2 = ap_const_lv1_0))) then
                trunc_ln1352_reg_1755 <= trunc_ln1352_fu_1150_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1626 = ap_const_lv1_0))) then
                trunc_ln321_1_reg_1717 <= trunc_ln321_1_fu_1032_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_30_fu_785_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1541 = ap_const_lv1_1)))) then
                    zext_ln174_reg_1597(4 downto 0) <= zext_ln174_fu_831_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_896_p2 = ap_const_lv1_0))) then
                    zext_ln177_1_reg_1654(3 downto 0) <= zext_ln177_1_fu_911_p1(3 downto 0);
                    zext_ln215_16_reg_1648(3 downto 0) <= zext_ln215_16_fu_907_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln887_30_fu_785_p2 = ap_const_lv1_0) and (icmp_ln883_reg_1541 = ap_const_lv1_0))) then
                    zext_ln544_95_reg_1577(5 downto 0) <= zext_ln544_95_fu_797_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln166_reg_1528(7 downto 3) <= "00000";
    shl_ln_reg_1546(4 downto 0) <= "00000";
    zext_ln544_95_reg_1577(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln174_reg_1597(5) <= '0';
    zext_ln176_reg_1610(4 downto 2) <= "000";
    zext_ln176_2_reg_1630(8) <= '0';
    zext_ln215_16_reg_1648(9 downto 4) <= "000000";
    zext_ln177_1_reg_1654(5 downto 4) <= "00";
    lhs_V_30_reg_1677(9) <= '0';
    ret_V_119_reg_1776(4 downto 0) <= "00000";
    zext_ln208_reg_1802(7 downto 4) <= "0000";
    zext_ln215_14_reg_1831(8) <= '0';
    zext_ln210_1_reg_1836(3 downto 0) <= "0000";
    zext_ln210_1_reg_1836(7 downto 6) <= "00";
    zext_ln215_15_reg_1854(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state15, ap_CS_fsm_state2, icmp_ln887_fu_681_p2, ap_CS_fsm_state4, icmp_ln883_fu_725_p2, icmp_ln883_reg_1541, icmp_ln166_fu_713_p2, ap_CS_fsm_state5, icmp_ln887_28_fu_749_p2, ap_CS_fsm_state8, icmp_ln887_30_fu_785_p2, ap_CS_fsm_state10, icmp_ln174_fu_835_p2, or_ln179_reg_1626, ap_CS_fsm_state11, icmp_ln176_fu_896_p2, ap_CS_fsm_state12, icmp_ln177_fu_931_p2, ap_CS_fsm_state13, icmp_ln887_32_fu_951_p2, ap_CS_fsm_state18, icmp_ln887_33_fu_1080_p2, ap_CS_fsm_state20, icmp_ln199_fu_1138_p2, ap_CS_fsm_state22, grp_leaves_butterfly_fu_653_ap_done, ap_CS_fsm_state23, icmp_ln887_27_fu_1185_p2, ap_CS_fsm_state25, icmp_ln202_fu_1218_p2, ap_CS_fsm_state26, icmp_ln208_fu_1248_p2, ap_CS_fsm_state27, icmp_ln210_fu_1306_p2, ap_CS_fsm_state29, icmp_ln887_31_fu_1394_p2, ap_CS_fsm_state31, grp_gf_mul_fu_664_ap_done, ap_CS_fsm_state33, icmp_ln230_fu_1455_p2, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_681_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_713_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_713_p2 = ap_const_lv1_0) and (icmp_ln883_fu_725_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_28_fu_749_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_30_fu_785_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1541 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_835_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_896_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_931_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_32_fu_951_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1626 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln887_33_fu_1080_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1138_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_leaves_butterfly_fu_653_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln887_27_fu_1185_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1218_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1248_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1306_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln887_31_fu_1394_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_gf_mul_fu_664_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln230_fu_1455_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_local_V_5_fu_1376_p3 <= 
        p_A_V_q0 when (icmp_ln879_reg_1820(0) = '1') else 
        big_W_V_q0;
    A_local_V_6_fu_1435_p3 <= 
        p_03119_1_reg_620 when (icmp_ln879_reg_1820(0) = '1') else 
        big_W_V_q0;
    add_ln166_fu_890_p2 <= std_logic_vector(unsigned(indvars_iv_reg_417) + unsigned(ap_const_lv3_7));
    add_ln321_6_fu_1476_p2 <= std_logic_vector(unsigned(zext_ln321_8_fu_1472_p1) + unsigned(ap_const_lv10_19A));
    add_ln321_fu_693_p2 <= std_logic_vector(unsigned(p_02419_0_reg_405) + unsigned(ap_const_lv6_1E));
    add_ln544_fu_765_p2 <= std_logic_vector(unsigned(shl_ln_reg_1546) + unsigned(zext_ln215_fu_761_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state17_on_subcall_done_assign_proc : process(or_ln179_reg_1626, grp_gf_mul_fu_664_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_gf_mul_fu_664_ap_done = ap_const_logic_0) and (or_ln179_reg_1626 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state33, icmp_ln230_fu_1455_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln230_fu_1455_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state33, icmp_ln230_fu_1455_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln230_fu_1455_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    big_W_V_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29, big_W_V_addr_6_reg_1904, ap_CS_fsm_state30, ap_CS_fsm_state33, zext_ln544_97_fu_1354_p1, zext_ln544_100_fu_1404_p1, zext_ln544_93_fu_1467_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            big_W_V_address0 <= zext_ln544_93_fu_1467_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            big_W_V_address0 <= big_W_V_addr_6_reg_1904;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            big_W_V_address0 <= zext_ln544_100_fu_1404_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            big_W_V_address0 <= zext_ln544_97_fu_1354_p1(8 - 1 downto 0);
        else 
            big_W_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    big_W_V_address1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state27, big_W_V_addr_3_reg_1864, ap_CS_fsm_state28, big_W_V_addr_5_reg_1893, big_W_V_addr_6_reg_1904, ap_CS_fsm_state31, ap_CS_fsm_state24, ap_CS_fsm_state32, zext_ln544_92_fu_1209_p1, zext_ln544_99_fu_1229_p1, zext_ln544_98_fu_1359_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            big_W_V_address1 <= big_W_V_addr_5_reg_1893;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            big_W_V_address1 <= big_W_V_addr_6_reg_1904;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            big_W_V_address1 <= big_W_V_addr_3_reg_1864;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            big_W_V_address1 <= zext_ln544_98_fu_1359_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            big_W_V_address1 <= zext_ln544_99_fu_1229_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            big_W_V_address1 <= zext_ln544_92_fu_1209_p1(8 - 1 downto 0);
        else 
            big_W_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    big_W_V_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            big_W_V_ce0 <= ap_const_logic_1;
        else 
            big_W_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    big_W_V_ce1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state31, grp_gf_mul_fu_664_ap_done, ap_CS_fsm_state24, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((grp_gf_mul_fu_664_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            big_W_V_ce1 <= ap_const_logic_1;
        else 
            big_W_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    big_W_V_d1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state28, ret_V_130_reg_1927, ap_CS_fsm_state31, w16_q0, ap_CS_fsm_state24, ap_CS_fsm_state32, ret_V_124_fu_1383_p2, ret_V_142_fu_1443_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            big_W_V_d1 <= ret_V_130_reg_1927;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            big_W_V_d1 <= ret_V_142_fu_1443_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            big_W_V_d1 <= ret_V_124_fu_1383_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            big_W_V_d1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            big_W_V_d1 <= w16_q0;
        else 
            big_W_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    big_W_V_we1_assign_proc : process(ap_CS_fsm_state25, icmp_ln202_fu_1218_p2, ap_CS_fsm_state28, ap_CS_fsm_state31, grp_gf_mul_fu_664_ap_done, ap_CS_fsm_state24, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((grp_gf_mul_fu_664_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1218_p2 = ap_const_lv1_0)))) then 
            big_W_V_we1 <= ap_const_logic_1;
        else 
            big_W_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    bm_pow_R_address0 <= zext_ln544_104_fu_1027_p1(5 - 1 downto 0);

    bm_pow_R_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            bm_pow_R_ce0 <= ap_const_logic_1;
        else 
            bm_pow_R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fr_V_address0_assign_proc : process(ap_CS_fsm_state8, zext_ln544_95_fu_797_p1, ap_CS_fsm_state7, zext_ln544_89_fu_780_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            fr_V_address0 <= zext_ln544_95_fu_797_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fr_V_address0 <= zext_ln544_89_fu_780_p1(5 - 1 downto 0);
        else 
            fr_V_address0 <= "XXXXX";
        end if; 
    end process;


    fr_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fr_V_ce0 <= ap_const_logic_1;
        else 
            fr_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fr_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fr_V_we0 <= ap_const_logic_1;
        else 
            fr_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    gammas_sums_R_address0 <= zext_ln544_102_fu_1424_p1(8 - 1 downto 0);

    gammas_sums_R_ce0_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            gammas_sums_R_ce0 <= ap_const_logic_1;
        else 
            gammas_sums_R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_gf_mul_fu_664_a_V_assign_proc : process(reg_675, or_ln179_reg_1626, gammas_sums_R_load_reg_1922, ap_CS_fsm_state31, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_gf_mul_fu_664_a_V <= gammas_sums_R_load_reg_1922;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1626 = ap_const_lv1_0))) then 
            grp_gf_mul_fu_664_a_V <= reg_675;
        else 
            grp_gf_mul_fu_664_a_V <= "XXXXXXXX";
        end if; 
    end process;

    grp_gf_mul_fu_664_ap_start <= grp_gf_mul_fu_664_ap_start_reg;

    grp_gf_mul_fu_664_b_V_assign_proc : process(or_ln179_reg_1626, bm_pow_R_load_reg_1724, A_local_V_6_reg_1915, ap_CS_fsm_state31, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_gf_mul_fu_664_b_V <= A_local_V_6_reg_1915;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1626 = ap_const_lv1_0))) then 
            grp_gf_mul_fu_664_b_V <= bm_pow_R_load_reg_1724;
        else 
            grp_gf_mul_fu_664_b_V <= "XXXXXXXX";
        end if; 
    end process;

    grp_leaves_butterfly_fu_653_ap_start <= grp_leaves_butterfly_fu_653_ap_start_reg;
    i_V_31_fu_755_p2 <= std_logic_vector(unsigned(p_02419_1_reg_441) + unsigned(ap_const_lv6_1));
    i_V_32_fu_791_p2 <= std_logic_vector(unsigned(p_02419_2_reg_453) + unsigned(ap_const_lv6_1));
    i_V_33_fu_1144_p2 <= std_logic_vector(unsigned(p_02419_4_reg_540) + unsigned(ap_const_lv4_1));
    i_V_34_fu_901_p2 <= std_logic_vector(unsigned(p_02419_3_reg_495) + unsigned(ap_const_lv4_1));
    i_V_fu_687_p2 <= std_logic_vector(unsigned(p_02419_0_reg_405) + unsigned(ap_const_lv6_1));
    icmp_ln166_fu_713_p2 <= "1" when (t_V_8_reg_429 = ap_const_lv3_4) else "0";
    icmp_ln174_fu_835_p2 <= "1" when (p_01982_0_reg_464 = indvars_iv_reg_417) else "0";
    icmp_ln176_fu_896_p2 <= "1" when (p_02419_3_reg_495 = shl_ln176_reg_1616) else "0";
    icmp_ln177_fu_931_p2 <= "1" when (p_03344_0_reg_506 = shl_ln177_reg_1621) else "0";
    icmp_ln179_fu_871_p2 <= "0" when (p_01982_0_reg_464 = ap_const_lv3_0) else "1";
    icmp_ln199_fu_1138_p2 <= "1" when (p_02419_4_reg_540 = ap_const_lv4_8) else "0";
    icmp_ln202_fu_1218_p2 <= "1" when (p_02751_1_reg_563 = ap_const_lv6_20) else "0";
    icmp_ln208_fu_1248_p2 <= "1" when (t_V_6_reg_574 = ap_const_lv4_9) else "0";
    icmp_ln210_fu_1306_p2 <= "1" when (p_02813_0_reg_609 = shl_ln210_reg_1815) else "0";
    icmp_ln230_fu_1455_p2 <= "1" when (p_03344_2_reg_641 = ap_const_lv9_100) else "0";
    icmp_ln879_fu_1270_p2 <= "1" when (t_V_7_reg_598 = ap_const_lv3_0) else "0";
    icmp_ln883_fu_725_p2 <= "1" when (t_V_8_reg_429 = ap_const_lv3_0) else "0";
    icmp_ln887_27_fu_1185_p2 <= "1" when (p_02751_0_reg_551 = ap_const_lv5_10) else "0";
    icmp_ln887_28_fu_749_p2 <= "1" when (p_02419_1_reg_441 = ap_const_lv6_20) else "0";
    icmp_ln887_30_fu_785_p2 <= "1" when (p_02419_2_reg_453 = ap_const_lv6_20) else "0";
    icmp_ln887_31_fu_1394_p2 <= "1" when (unsigned(p_03344_1_reg_630) < unsigned(shl_ln215_reg_1826)) else "0";
    icmp_ln887_32_fu_951_p2 <= "1" when (p_02390_0_reg_517 = ap_const_lv3_4) else "0";
    icmp_ln887_33_fu_1080_p2 <= "1" when (p_02390_1_reg_529 = ap_const_lv3_4) else "0";
    icmp_ln887_fu_681_p2 <= "1" when (p_02419_0_reg_405 = ap_const_lv6_20) else "0";
    ind_1_V_1_fu_802_p2 <= std_logic_vector(signed(ap_const_lv3_5) - signed(t_V_8_reg_429));
    ind_1_V_2_fu_915_p2 <= std_logic_vector(signed(t_V_9_reg_475) + signed(ap_const_lv4_F));
    ind_1_V_fu_1370_p2 <= std_logic_vector(unsigned(t_V_6_reg_574) + unsigned(ap_const_lv4_1));
    ind_2_V_1_fu_816_p2 <= (trunc_ln214_fu_812_p1 xor ap_const_lv2_3);
    ind_2_V_2_fu_921_p2 <= std_logic_vector(unsigned(t_V_10_reg_485) + unsigned(ap_const_lv2_3));
    ind_2_V_fu_1364_p2 <= std_logic_vector(unsigned(t_V_reg_586) + unsigned(ap_const_lv2_3));
    j_V_10_fu_1429_p2 <= std_logic_vector(unsigned(p_03344_1_reg_630) + unsigned(ap_const_lv8_1));
    j_V_11_fu_936_p2 <= std_logic_vector(unsigned(p_03344_0_reg_506) + unsigned(ap_const_lv4_1));
    j_V_fu_1461_p2 <= std_logic_vector(unsigned(p_03344_2_reg_641) + unsigned(ap_const_lv9_1));
    k_V_fu_841_p2 <= std_logic_vector(unsigned(p_01982_0_reg_464) + unsigned(ap_const_lv3_1));
    l_V_1_fu_957_p2 <= std_logic_vector(unsigned(p_02390_0_reg_517) + unsigned(ap_const_lv3_1));
    l_V_fu_1086_p2 <= std_logic_vector(unsigned(p_02390_1_reg_529) + unsigned(ap_const_lv3_1));
    lhs_V_30_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_fu_942_p2),10));
    m_V_fu_1311_p2 <= std_logic_vector(unsigned(p_02813_0_reg_609) + unsigned(ap_const_lv4_1));
    n_V_1_fu_1234_p2 <= std_logic_vector(unsigned(p_02751_1_reg_563) + unsigned(ap_const_lv6_1));
    n_V_fu_1191_p2 <= std_logic_vector(unsigned(p_02751_0_reg_551) + unsigned(ap_const_lv5_1));
    or_ln179_fu_877_p2 <= (icmp_ln883_reg_1541 or icmp_ln179_fu_871_p2);

    p_A_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state20, ap_CS_fsm_state27, zext_ln544_91_fu_775_p1, zext_ln544_103_fu_1009_p1, zext_ln544_87_fu_1162_p1, zext_ln544_96_fu_1335_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_A_V_address0 <= zext_ln544_96_fu_1335_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_A_V_address0 <= zext_ln544_87_fu_1162_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_A_V_address0 <= zext_ln544_103_fu_1009_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_A_V_address0 <= zext_ln544_91_fu_775_p1(5 - 1 downto 0);
        else 
            p_A_V_address0 <= "XXXXX";
        end if; 
    end process;


    p_A_V_address1_assign_proc : process(zext_ln544_95_reg_1577, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19, zext_ln544_fu_704_p1, zext_ln544_105_fu_1134_p1, zext_ln544_88_fu_1173_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_A_V_address1 <= zext_ln544_88_fu_1173_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_A_V_address1 <= zext_ln544_105_fu_1134_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_A_V_address1 <= zext_ln544_95_reg_1577(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_A_V_address1 <= zext_ln544_fu_704_p1(5 - 1 downto 0);
        else 
            p_A_V_address1 <= "XXXXX";
        end if; 
    end process;


    p_A_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state20, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            p_A_V_ce0 <= ap_const_logic_1;
        else 
            p_A_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_A_V_ce1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            p_A_V_ce1 <= ap_const_logic_1;
        else 
            p_A_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_A_V_d1_assign_proc : process(rs_mem_1_q0, tmp_8_reg_1742, fr_V_q0, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_A_V_d1 <= tmp_8_reg_1742;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_A_V_d1 <= fr_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_A_V_d1 <= rs_mem_1_q0;
        else 
            p_A_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    p_A_V_we1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            p_A_V_we1 <= ap_const_logic_1;
        else 
            p_A_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    perm_r_address0 <= zext_ln544_90_fu_770_p1(7 - 1 downto 0);

    perm_r_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            perm_r_ce0 <= ap_const_logic_1;
        else 
            perm_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_5_fu_942_p2 <= std_logic_vector(shift_left(unsigned(zext_ln887_1_fu_927_p1),to_integer(unsigned('0' & zext_ln176_2_reg_1630(9-1 downto 0)))));
    r_V_6_fu_822_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_C0),to_integer(unsigned('0' & zext_ln166_reg_1528(8-1 downto 0)))));
    r_V_fu_1340_p2 <= std_logic_vector(shift_left(unsigned(zext_ln887_fu_1302_p1),to_integer(unsigned('0' & zext_ln208_reg_1802(8-1 downto 0)))));
    ret_V_117_fu_1167_p2 <= (ret_V_fu_1154_p3 or ap_const_lv5_1);
    ret_V_118_fu_735_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln1354_fu_731_p1));
    ret_V_119_fu_1178_p3 <= (trunc_ln1352_reg_1755 & ap_const_lv5_0);
    ret_V_120_fu_1202_p3 <= (trunc_ln1352_reg_1755 & p_02751_0_reg_551);
    ret_V_121_fu_1321_p3 <= (trunc_ln1352_2_fu_1317_p1 & ap_const_lv2_0);
    ret_V_122_fu_1329_p2 <= (ret_V_121_fu_1321_p3 or ap_const_lv5_2);
    ret_V_123_fu_1349_p2 <= std_logic_vector(unsigned(zext_ln215_15_fu_1345_p1) + unsigned(zext_ln215_14_reg_1831));
    ret_V_124_fu_1383_p2 <= (big_W_V_q1 xor A_local_V_5_fu_1376_p3);
    ret_V_125_fu_1224_p2 <= std_logic_vector(unsigned(ret_V_119_reg_1776) + unsigned(zext_ln202_fu_1214_p1));
    ret_V_126_fu_1399_p2 <= std_logic_vector(unsigned(ret_V_123_reg_1859) + unsigned(zext_ln1598_fu_1390_p1));
    ret_V_127_fu_1409_p2 <= std_logic_vector(unsigned(zext_ln1598_fu_1390_p1) + unsigned(zext_ln215_15_reg_1854));
    ret_V_128_fu_1419_p2 <= std_logic_vector(unsigned(zext_ln210_1_reg_1836) + unsigned(p_03344_1_reg_630));
    ret_V_130_fu_1450_p2 <= (ret_V_142_fu_1443_p2 xor A_local_V_6_reg_1915);
    ret_V_133_fu_999_p2 <= std_logic_vector(unsigned(lhs_V_30_reg_1677) + unsigned(rhs_V_39_fu_996_p1));
    ret_V_134_fu_1004_p2 <= std_logic_vector(unsigned(ret_V_133_fu_999_p2) + unsigned(zext_ln215_16_reg_1648));
    ret_V_135_fu_827_p1 <= r_V_6_fu_822_p2(5 - 1 downto 0);
    ret_V_136_fu_1017_p2 <= std_logic_vector(unsigned(zext_ln174_reg_1597) + unsigned(zext_ln215_19_fu_1014_p1));
    ret_V_137_fu_1022_p2 <= std_logic_vector(unsigned(ret_V_136_fu_1017_p2) + unsigned(zext_ln177_1_reg_1654));
    ret_V_138_fu_1108_p2 <= std_logic_vector(unsigned(lhs_V_30_reg_1677) + unsigned(rhs_V_40_fu_1104_p1));
    ret_V_139_fu_1113_p2 <= std_logic_vector(unsigned(ret_V_138_fu_1108_p2) + unsigned(zext_ln215_16_reg_1648));
    ret_V_140_fu_984_p2 <= (xor_ln1357_fu_978_p2 xor lhs_V_26_fu_178);
    ret_V_141_fu_990_p2 <= (p_C_3_V_fu_182 xor lhs_V_26_fu_178);
    ret_V_142_fu_1443_p2 <= (grp_gf_mul_fu_664_ap_return xor big_W_V_q0);
    ret_V_2_fu_1290_p3 <= (trunc_ln1352_1_fu_1286_p1 & ap_const_lv4_0);
    ret_V_fu_1154_p3 <= (trunc_ln1352_fu_1150_p1 & ap_const_lv2_0);
    rhs_V_39_fu_996_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln790_1_reg_1691),10));
    rhs_V_40_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln790_fu_1099_p2),10));
    round_V_1_fu_719_p2 <= std_logic_vector(unsigned(t_V_8_reg_429) + unsigned(ap_const_lv3_1));
    round_V_fu_1254_p2 <= std_logic_vector(unsigned(t_V_7_reg_598) + unsigned(ap_const_lv3_1));

    rs_mem_1_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34, zext_ln321_fu_699_p1, zext_ln321_9_fu_1482_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            rs_mem_1_address0 <= zext_ln321_9_fu_1482_p1(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rs_mem_1_address0 <= zext_ln321_fu_699_p1(10 - 1 downto 0);
        else 
            rs_mem_1_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    rs_mem_1_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state34)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            rs_mem_1_ce0 <= ap_const_logic_1;
        else 
            rs_mem_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rs_mem_1_d0 <= big_W_V_q0;

    rs_mem_1_we0_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            rs_mem_1_we0 <= ap_const_logic_1;
        else 
            rs_mem_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln215_fu_882_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(t_V_9_reg_475),8));

    shl_ln176_fu_855_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln176_1_fu_851_p1(4-1 downto 0)))));
    shl_ln177_fu_865_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln177_fu_861_p1(4-1 downto 0)))));
    shl_ln210_fu_1264_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln210_fu_1260_p1(4-1 downto 0)))));
    shl_ln215_fu_1276_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_10),to_integer(unsigned('0' & zext_ln208_1_fu_1244_p1(8-1 downto 0)))));
    shl_ln790_1_fu_967_p2 <= std_logic_vector(shift_left(unsigned(zext_ln790_fu_963_p1),to_integer(unsigned('0' & zext_ln176_reg_1610(5-1 downto 0)))));
    shl_ln790_fu_1099_p2 <= std_logic_vector(shift_left(unsigned(zext_ln790_1_fu_1095_p1),to_integer(unsigned('0' & zext_ln176_reg_1610(5-1 downto 0)))));
    shl_ln_fu_741_p3 <= (ret_V_118_fu_735_p2 & ap_const_lv5_0);
    tmp_8_fu_1122_p5 <= p_02390_1_reg_529(2 - 1 downto 0);
    trunc_ln1352_1_fu_1286_p1 <= t_V_7_reg_598(2 - 1 downto 0);
    trunc_ln1352_2_fu_1317_p1 <= p_02813_0_reg_609(3 - 1 downto 0);
    trunc_ln1352_fu_1150_p1 <= p_02419_4_reg_540(3 - 1 downto 0);
    trunc_ln1354_fu_731_p1 <= t_V_8_reg_429(2 - 1 downto 0);
    trunc_ln214_fu_812_p1 <= t_V_8_reg_429(2 - 1 downto 0);
    trunc_ln321_1_fu_1032_p1 <= p_02390_0_reg_517(2 - 1 downto 0);
    trunc_ln321_fu_1036_p1 <= p_02390_0_reg_517(2 - 1 downto 0);

    w16_address0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, grp_leaves_butterfly_fu_653_small_w_V_address0, zext_ln544_94_fu_1197_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            w16_address0 <= zext_ln544_94_fu_1197_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_address0 <= grp_leaves_butterfly_fu_653_small_w_V_address0;
        else 
            w16_address0 <= "XXXX";
        end if; 
    end process;


    w16_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, grp_leaves_butterfly_fu_653_small_w_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            w16_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_ce0 <= grp_leaves_butterfly_fu_653_small_w_V_ce0;
        else 
            w16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w16_ce1_assign_proc : process(ap_CS_fsm_state22, grp_leaves_butterfly_fu_653_small_w_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_ce1 <= grp_leaves_butterfly_fu_653_small_w_V_ce1;
        else 
            w16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w16_we1_assign_proc : process(ap_CS_fsm_state22, grp_leaves_butterfly_fu_653_small_w_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_we1 <= grp_leaves_butterfly_fu_653_small_w_V_we1;
        else 
            w16_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln1357_fu_978_p2 <= (p_C_3_V_fu_182 xor lhs_V_25_fu_174);
    zext_ln1598_fu_1390_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_1_reg_630),9));
    zext_ln166_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_429),8));
    zext_ln174_fu_831_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_135_fu_827_p1),6));
    zext_ln176_1_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_10_reg_485),4));
    zext_ln176_2_fu_886_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln215_fu_882_p1),9));
    zext_ln176_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_10_reg_485),5));
    zext_ln177_1_fu_911_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_3_reg_495),6));
    zext_ln177_fu_861_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_01982_0_reg_464),4));
    zext_ln202_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02751_1_reg_563),8));
    zext_ln208_1_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_598),8));
    zext_ln208_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_6_reg_574),8));
    zext_ln210_1_fu_1298_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_fu_1290_p3),8));
    zext_ln210_fu_1260_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_586),4));
    zext_ln214_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ind_1_V_1_fu_802_p2),4));
    zext_ln215_14_fu_1282_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln215_fu_1276_p2),9));
    zext_ln215_15_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1340_p2),9));
    zext_ln215_16_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_3_reg_495),10));
    zext_ln215_19_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln790_1_reg_1691),6));
    zext_ln215_fu_761_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_1_reg_441),7));
    zext_ln321_8_fu_1472_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_2_reg_641),10));
    zext_ln321_9_fu_1482_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_6_fu_1476_p2),64));
    zext_ln321_fu_699_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_fu_693_p2),64));
    zext_ln544_100_fu_1404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_126_fu_1399_p2),64));
    zext_ln544_101_fu_1414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_127_fu_1409_p2),64));
    zext_ln544_102_fu_1424_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_128_fu_1419_p2),64));
    zext_ln544_103_fu_1009_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_134_fu_1004_p2),64));
    zext_ln544_104_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_137_fu_1022_p2),64));
    zext_ln544_105_fu_1134_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_139_reg_1737),64));
    zext_ln544_87_fu_1162_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_1154_p3),64));
    zext_ln544_88_fu_1173_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_117_fu_1167_p2),64));
    zext_ln544_89_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_1_reg_441),64));
    zext_ln544_90_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln544_fu_765_p2),64));
    zext_ln544_91_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(perm_r_q0),64));
    zext_ln544_92_fu_1209_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_120_fu_1202_p3),64));
    zext_ln544_93_fu_1467_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_2_reg_641),64));
    zext_ln544_94_fu_1197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02751_0_reg_551),64));
    zext_ln544_95_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_2_reg_453),64));
    zext_ln544_96_fu_1335_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_122_fu_1329_p2),64));
    zext_ln544_97_fu_1354_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_123_fu_1349_p2),64));
    zext_ln544_98_fu_1359_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1340_p2),64));
    zext_ln544_99_fu_1229_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_125_fu_1224_p2),64));
    zext_ln544_fu_704_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_0_reg_405),64));
    zext_ln790_1_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02390_1_reg_529),5));
    zext_ln790_fu_963_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02390_0_reg_517),5));
    zext_ln887_1_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_0_reg_506),9));
    zext_ln887_fu_1302_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02813_0_reg_609),8));
end behav;
