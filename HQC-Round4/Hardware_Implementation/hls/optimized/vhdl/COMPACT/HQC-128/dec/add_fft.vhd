-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity add_fft is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rs_mem_1_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    rs_mem_1_ce0 : OUT STD_LOGIC;
    rs_mem_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    rs_mem_1_address1 : OUT STD_LOGIC_VECTOR (9 downto 0);
    rs_mem_1_ce1 : OUT STD_LOGIC;
    rs_mem_1_we1 : OUT STD_LOGIC;
    rs_mem_1_d1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of add_fft is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (33 downto 0) := "0000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (33 downto 0) := "0000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (33 downto 0) := "0000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (33 downto 0) := "0000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (33 downto 0) := "0000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (33 downto 0) := "0000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (33 downto 0) := "0001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (33 downto 0) := "0010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (33 downto 0) := "0100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (33 downto 0) := "1000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv6_1E : STD_LOGIC_VECTOR (5 downto 0) := "011110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv8_C0 : STD_LOGIC_VECTOR (7 downto 0) := "11000000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv10_19A : STD_LOGIC_VECTOR (9 downto 0) := "0110011010";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal perm_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal perm_r_ce0 : STD_LOGIC;
    signal perm_r_q0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bm_pow_R_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal bm_pow_R_ce0 : STD_LOGIC;
    signal bm_pow_R_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal gammas_sums_R_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal gammas_sums_R_ce0 : STD_LOGIC;
    signal gammas_sums_R_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_A_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal reg_693 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal i_V_fu_705_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_reg_1508 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln887_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln166_fu_727_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln166_reg_1546 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal round_V_1_fu_737_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal round_V_1_reg_1554 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln883_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln883_reg_1559 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln166_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_759_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal shl_ln_reg_1564 : STD_LOGIC_VECTOR (6 downto 0);
    signal i_V_26_fu_773_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_26_reg_1572 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln887_25_fu_767_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal i_V_27_fu_809_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_V_27_reg_1590 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln544_68_fu_815_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_68_reg_1595 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln887_26_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln214_fu_826_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ind_2_V_1_fu_834_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln174_fu_849_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln174_reg_1615 : STD_LOGIC_VECTOR (5 downto 0);
    signal k_V_fu_859_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal k_V_reg_1623 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln176_fu_865_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln176_reg_1628 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln174_fu_853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln176_fu_873_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln176_reg_1634 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln177_fu_883_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln177_reg_1639 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln179_fu_895_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln179_reg_1644 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln176_2_fu_904_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln176_2_reg_1648 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln166_fu_908_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_V_29_fu_919_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_V_29_reg_1661 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal zext_ln215_13_fu_925_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_13_reg_1666 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln176_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln177_1_fu_929_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln177_1_reg_1672 : STD_LOGIC_VECTOR (5 downto 0);
    signal ind_1_V_2_fu_933_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ind_2_V_2_fu_939_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_V_11_fu_954_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_V_11_reg_1690 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal lhs_V_30_fu_965_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_30_reg_1695 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln177_fu_949_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal l_V_1_fu_975_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_V_1_reg_1704 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal shl_ln790_1_fu_985_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln790_1_reg_1709 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln887_28_fu_969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_116_fu_1002_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_116_reg_1715 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_117_fu_1008_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_117_reg_1720 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal trunc_ln321_1_fu_1050_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_1_reg_1735 : STD_LOGIC_VECTOR (1 downto 0);
    signal bm_pow_R_load_reg_1742 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal l_V_fu_1104_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_V_reg_1750 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ret_V_115_fu_1131_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_115_reg_1755 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln887_29_fu_1098_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_1140_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_reg_1760 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_V_28_fu_1162_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_V_28_reg_1768 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal trunc_ln1352_fu_1168_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln1352_reg_1773 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln199_fu_1156_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_A_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_A_V_load_1_reg_1789 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_95_fu_1196_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_95_reg_1794 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal grp_leaves_butterfly_fu_671_ap_ready : STD_LOGIC;
    signal grp_leaves_butterfly_fu_671_ap_done : STD_LOGIC;
    signal n_V_fu_1209_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal n_V_reg_1802 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln887_24_fu_1203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_V_1_fu_1252_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal icmp_ln202_fu_1236_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln208_fu_1258_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln208_reg_1820 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal round_V_fu_1272_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal round_V_reg_1828 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln210_fu_1282_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln210_reg_1833 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln208_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_fu_1288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1838 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln215_fu_1294_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln215_reg_1844 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_11_fu_1300_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_11_reg_1849 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln210_1_fu_1316_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln210_1_reg_1854 : STD_LOGIC_VECTOR (7 downto 0);
    signal m_V_fu_1329_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal m_V_reg_1862 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln210_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln215_12_fu_1363_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_12_reg_1872 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_99_fu_1367_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_99_reg_1877 : STD_LOGIC_VECTOR (8 downto 0);
    signal big_W_V_addr_3_reg_1882 : STD_LOGIC_VECTOR (7 downto 0);
    signal ind_2_V_fu_1382_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal ind_1_V_fu_1388_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal A_local_V_5_fu_1394_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal big_W_V_addr_5_reg_1911 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln887_27_fu_1412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal big_W_V_addr_6_reg_1922 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_V_10_fu_1447_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_V_10_reg_1928 : STD_LOGIC_VECTOR (7 downto 0);
    signal A_local_V_6_fu_1453_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal A_local_V_6_reg_1933 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal gammas_sums_R_load_reg_1940 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_106_fu_1468_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_106_reg_1945 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal grp_gf_mul_fu_682_ap_ready : STD_LOGIC;
    signal grp_gf_mul_fu_682_ap_done : STD_LOGIC;
    signal j_V_fu_1479_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_V_reg_1953 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln230_fu_1473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal fr_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal fr_V_ce0 : STD_LOGIC;
    signal fr_V_we0 : STD_LOGIC;
    signal fr_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_A_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_A_V_ce0 : STD_LOGIC;
    signal p_A_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_A_V_ce1 : STD_LOGIC;
    signal p_A_V_we1 : STD_LOGIC;
    signal p_A_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_ce0 : STD_LOGIC;
    signal big_W_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_ce1 : STD_LOGIC;
    signal big_W_V_we1 : STD_LOGIC;
    signal big_W_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal big_W_V_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal w16_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal w16_ce0 : STD_LOGIC;
    signal w16_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal w16_ce1 : STD_LOGIC;
    signal w16_we1 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_671_ap_start : STD_LOGIC;
    signal grp_leaves_butterfly_fu_671_ap_idle : STD_LOGIC;
    signal grp_leaves_butterfly_fu_671_small_w_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_leaves_butterfly_fu_671_small_w_V_ce0 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_671_small_w_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_leaves_butterfly_fu_671_small_w_V_ce1 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_671_small_w_V_we1 : STD_LOGIC;
    signal grp_leaves_butterfly_fu_671_small_w_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gf_mul_fu_682_ap_start : STD_LOGIC;
    signal grp_gf_mul_fu_682_ap_idle : STD_LOGIC;
    signal grp_gf_mul_fu_682_a_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gf_mul_fu_682_b_V : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_gf_mul_fu_682_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal p_02419_0_reg_423 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal indvars_iv_reg_435 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_8_reg_447 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_02419_1_reg_459 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal p_02419_2_reg_471 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal p_01982_0_reg_482 : STD_LOGIC_VECTOR (2 downto 0);
    signal t_V_9_reg_493 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_V_10_reg_503 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_02419_3_reg_513 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_03344_0_reg_524 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_02390_0_reg_535 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal p_02390_1_reg_547 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal p_02419_4_reg_558 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_02751_0_reg_569 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal p_02751_1_reg_581 : STD_LOGIC_VECTOR (5 downto 0);
    signal t_V_6_reg_592 : STD_LOGIC_VECTOR (3 downto 0);
    signal t_V_reg_604 : STD_LOGIC_VECTOR (1 downto 0);
    signal t_V_7_reg_616 : STD_LOGIC_VECTOR (2 downto 0);
    signal p_02813_0_reg_627 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_03119_1_reg_638 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal p_03344_1_reg_648 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_03344_2_reg_659 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_leaves_butterfly_fu_671_ap_start_reg : STD_LOGIC := '0';
    signal grp_gf_mul_fu_682_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln321_fu_717_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_fu_722_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_64_fu_788_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_65_fu_793_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_63_fu_798_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_76_fu_1027_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_78_fu_1045_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_79_fu_1152_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_61_fu_1180_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_62_fu_1191_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_67_fu_1215_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_66_fu_1227_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_73_fu_1247_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_70_fu_1353_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_71_fu_1372_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_72_fu_1377_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_75_fu_1422_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_77_fu_1442_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_74_fu_1432_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_69_fu_1485_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln321_8_fu_1500_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_C_0_V_fu_176 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln321_fu_1054_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal lhs_V_25_fu_180 : STD_LOGIC_VECTOR (7 downto 0);
    signal lhs_V_26_fu_184 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_C_3_V_fu_188 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_100_fu_1401_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_118_fu_1461_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln321_fu_711_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1354_fu_749_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_94_fu_753_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln215_fu_779_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln544_fu_783_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ind_1_V_1_fu_820_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln214_fu_830_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal r_V_6_fu_840_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_111_fu_845_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln176_1_fu_869_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln177_fu_879_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln179_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln215_fu_900_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln887_1_fu_945_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal r_V_5_fu_960_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln790_fu_981_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln1357_fu_996_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal rhs_V_39_fu_1014_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_109_fu_1017_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_110_fu_1022_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_16_fu_1032_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_112_fu_1035_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ret_V_113_fu_1040_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln790_1_fu_1113_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln790_fu_1117_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs_V_40_fu_1122_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal ret_V_114_fu_1126_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_4_fu_1140_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_fu_1172_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_93_fu_1185_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_96_fu_1220_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln202_fu_1232_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_V_101_fu_1242_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln210_fu_1278_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln208_1_fu_1262_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln1352_1_fu_1304_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal ret_V_2_fu_1308_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal trunc_ln1352_2_fu_1335_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ret_V_97_fu_1339_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_V_98_fu_1347_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln887_fu_1320_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_V_fu_1358_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln1598_fu_1408_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_102_fu_1417_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_103_fu_1427_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ret_V_104_fu_1437_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln321_7_fu_1490_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln321_5_fu_1494_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (33 downto 0);

    component leaves_butterfly IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        small_w_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        small_w_V_ce0 : OUT STD_LOGIC;
        small_w_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        small_w_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        small_w_V_ce1 : OUT STD_LOGIC;
        small_w_V_we1 : OUT STD_LOGIC;
        small_w_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        A_0_V : IN STD_LOGIC_VECTOR (7 downto 0);
        A_1_V : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component gf_mul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        a_V : IN STD_LOGIC_VECTOR (7 downto 0);
        b_V : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component crypto_kem_dec_hlqcK IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_perm_r IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (4 downto 0) );
    end component;


    component add_fft_bm_pow_R IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_gammas_surcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_fr_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_p_A_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_big_W_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component add_fft_w16 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    perm_r_U : component add_fft_perm_r
    generic map (
        DataWidth => 5,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => perm_r_address0,
        ce0 => perm_r_ce0,
        q0 => perm_r_q0);

    bm_pow_R_U : component add_fft_bm_pow_R
    generic map (
        DataWidth => 8,
        AddressRange => 28,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => bm_pow_R_address0,
        ce0 => bm_pow_R_ce0,
        q0 => bm_pow_R_q0);

    gammas_sums_R_U : component add_fft_gammas_surcU
    generic map (
        DataWidth => 8,
        AddressRange => 240,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => gammas_sums_R_address0,
        ce0 => gammas_sums_R_ce0,
        q0 => gammas_sums_R_q0);

    fr_V_U : component add_fft_fr_V
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => fr_V_address0,
        ce0 => fr_V_ce0,
        we0 => fr_V_we0,
        d0 => p_A_V_q0,
        q0 => fr_V_q0);

    p_A_V_U : component add_fft_p_A_V
    generic map (
        DataWidth => 8,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_A_V_address0,
        ce0 => p_A_V_ce0,
        q0 => p_A_V_q0,
        address1 => p_A_V_address1,
        ce1 => p_A_V_ce1,
        we1 => p_A_V_we1,
        d1 => p_A_V_d1,
        q1 => p_A_V_q1);

    big_W_V_U : component add_fft_big_W_V
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => big_W_V_address0,
        ce0 => big_W_V_ce0,
        q0 => big_W_V_q0,
        address1 => big_W_V_address1,
        ce1 => big_W_V_ce1,
        we1 => big_W_V_we1,
        d1 => big_W_V_d1,
        q1 => big_W_V_q1);

    w16_U : component add_fft_w16
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => w16_address0,
        ce0 => w16_ce0,
        q0 => w16_q0,
        address1 => grp_leaves_butterfly_fu_671_small_w_V_address1,
        ce1 => w16_ce1,
        we1 => w16_we1,
        d1 => grp_leaves_butterfly_fu_671_small_w_V_d1);

    grp_leaves_butterfly_fu_671 : component leaves_butterfly
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_leaves_butterfly_fu_671_ap_start,
        ap_done => grp_leaves_butterfly_fu_671_ap_done,
        ap_idle => grp_leaves_butterfly_fu_671_ap_idle,
        ap_ready => grp_leaves_butterfly_fu_671_ap_ready,
        small_w_V_address0 => grp_leaves_butterfly_fu_671_small_w_V_address0,
        small_w_V_ce0 => grp_leaves_butterfly_fu_671_small_w_V_ce0,
        small_w_V_q0 => w16_q0,
        small_w_V_address1 => grp_leaves_butterfly_fu_671_small_w_V_address1,
        small_w_V_ce1 => grp_leaves_butterfly_fu_671_small_w_V_ce1,
        small_w_V_we1 => grp_leaves_butterfly_fu_671_small_w_V_we1,
        small_w_V_d1 => grp_leaves_butterfly_fu_671_small_w_V_d1,
        A_0_V => reg_693,
        A_1_V => p_A_V_load_1_reg_1789);

    grp_gf_mul_fu_682 : component gf_mul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_gf_mul_fu_682_ap_start,
        ap_done => grp_gf_mul_fu_682_ap_done,
        ap_idle => grp_gf_mul_fu_682_ap_idle,
        ap_ready => grp_gf_mul_fu_682_ap_ready,
        a_V => grp_gf_mul_fu_682_a_V,
        b_V => grp_gf_mul_fu_682_b_V,
        ap_return => grp_gf_mul_fu_682_ap_return);

    crypto_kem_dec_hlqcK_U48 : component crypto_kem_dec_hlqcK
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => p_C_0_V_fu_176,
        din1 => ret_V_116_reg_1715,
        din2 => ret_V_117_reg_1720,
        din3 => p_C_3_V_fu_188,
        din4 => tmp_4_fu_1140_p5,
        dout => tmp_4_fu_1140_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_gf_mul_fu_682_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_gf_mul_fu_682_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                    grp_gf_mul_fu_682_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gf_mul_fu_682_ap_ready = ap_const_logic_1)) then 
                    grp_gf_mul_fu_682_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_leaves_butterfly_fu_671_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_leaves_butterfly_fu_671_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_leaves_butterfly_fu_671_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_leaves_butterfly_fu_671_ap_ready = ap_const_logic_1)) then 
                    grp_leaves_butterfly_fu_671_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvars_iv_reg_435_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_699_p2 = ap_const_lv1_1))) then 
                indvars_iv_reg_435 <= ap_const_lv3_4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_853_p2 = ap_const_lv1_1))) then 
                indvars_iv_reg_435 <= add_ln166_fu_908_p2;
            end if; 
        end if;
    end process;

    lhs_V_25_fu_180_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1735 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1644 = ap_const_lv1_0))) then 
                lhs_V_25_fu_180 <= grp_gf_mul_fu_682_ap_return;
            elsif (((trunc_ln321_fu_1054_p1 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1644 = ap_const_lv1_1))) then 
                lhs_V_25_fu_180 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    lhs_V_26_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1735 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1644 = ap_const_lv1_0))) then 
                lhs_V_26_fu_184 <= grp_gf_mul_fu_682_ap_return;
            elsif (((trunc_ln321_fu_1054_p1 = ap_const_lv2_2) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1644 = ap_const_lv1_1))) then 
                lhs_V_26_fu_184 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    p_01982_0_reg_482_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_914_p2 = ap_const_lv1_1))) then 
                p_01982_0_reg_482 <= k_V_reg_1623;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_26_fu_803_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1559 = ap_const_lv1_1)))) then 
                p_01982_0_reg_482 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_02390_0_reg_535_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
                p_02390_0_reg_535 <= l_V_1_reg_1704;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_949_p2 = ap_const_lv1_0))) then 
                p_02390_0_reg_535 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_02390_1_reg_547_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                p_02390_1_reg_547 <= l_V_reg_1750;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_28_fu_969_p2 = ap_const_lv1_1))) then 
                p_02390_1_reg_547 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    p_02419_0_reg_423_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                p_02419_0_reg_423 <= i_V_reg_1508;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                p_02419_0_reg_423 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    p_02419_1_reg_459_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_731_p2 = ap_const_lv1_0) and (icmp_ln883_fu_743_p2 = ap_const_lv1_0))) then 
                p_02419_1_reg_459 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                p_02419_1_reg_459 <= i_V_26_reg_1572;
            end if; 
        end if;
    end process;

    p_02419_2_reg_471_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_25_fu_767_p2 = ap_const_lv1_1))) then 
                p_02419_2_reg_471 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                p_02419_2_reg_471 <= i_V_27_reg_1590;
            end if; 
        end if;
    end process;

    p_02419_3_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_949_p2 = ap_const_lv1_1))) then 
                p_02419_3_reg_513 <= i_V_29_reg_1661;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_853_p2 = ap_const_lv1_0))) then 
                p_02419_3_reg_513 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_02419_4_reg_558_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_731_p2 = ap_const_lv1_1))) then 
                p_02419_4_reg_558 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1236_p2 = ap_const_lv1_1))) then 
                p_02419_4_reg_558 <= i_V_28_reg_1768;
            end if; 
        end if;
    end process;

    p_02751_0_reg_569_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                p_02751_0_reg_569 <= n_V_reg_1802;
            elsif (((grp_leaves_butterfly_fu_671_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                p_02751_0_reg_569 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    p_02751_1_reg_581_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln887_24_fu_1203_p2 = ap_const_lv1_1))) then 
                p_02751_1_reg_581 <= ap_const_lv6_10;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1236_p2 = ap_const_lv1_0))) then 
                p_02751_1_reg_581 <= n_V_1_fu_1252_p2;
            end if; 
        end if;
    end process;

    p_02813_0_reg_627_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln887_27_fu_1412_p2 = ap_const_lv1_0))) then 
                p_02813_0_reg_627 <= m_V_reg_1862;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1266_p2 = ap_const_lv1_0))) then 
                p_02813_0_reg_627 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_03119_1_reg_638_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                p_03119_1_reg_638 <= A_local_V_6_reg_1933;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                p_03119_1_reg_638 <= A_local_V_5_fu_1394_p3;
            end if; 
        end if;
    end process;

    p_03344_0_reg_524_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln887_29_fu_1098_p2 = ap_const_lv1_1))) then 
                p_03344_0_reg_524 <= j_V_11_reg_1690;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_914_p2 = ap_const_lv1_0))) then 
                p_03344_0_reg_524 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    p_03344_1_reg_648_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                p_03344_1_reg_648 <= j_V_10_reg_1928;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                p_03344_1_reg_648 <= ap_const_lv8_1;
            end if; 
        end if;
    end process;

    p_03344_2_reg_659_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1266_p2 = ap_const_lv1_1))) then 
                p_03344_2_reg_659 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                p_03344_2_reg_659 <= j_V_reg_1953;
            end if; 
        end if;
    end process;

    p_C_0_V_fu_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1735 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1644 = ap_const_lv1_0))) then 
                p_C_0_V_fu_176 <= grp_gf_mul_fu_682_ap_return;
            elsif (((trunc_ln321_fu_1054_p1 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1644 = ap_const_lv1_1))) then 
                p_C_0_V_fu_176 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    p_C_3_V_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (trunc_ln321_1_reg_1735 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1644 = ap_const_lv1_0))) then 
                p_C_3_V_fu_188 <= grp_gf_mul_fu_682_ap_return;
            elsif (((trunc_ln321_fu_1054_p1 = ap_const_lv2_3) and (ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1644 = ap_const_lv1_1))) then 
                p_C_3_V_fu_188 <= p_A_V_q0;
            end if; 
        end if;
    end process;

    t_V_10_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_914_p2 = ap_const_lv1_1))) then 
                t_V_10_reg_503 <= ind_2_V_2_fu_939_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_26_fu_803_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1559 = ap_const_lv1_1)))) then 
                t_V_10_reg_503 <= ind_2_V_1_fu_834_p2;
            end if; 
        end if;
    end process;

    t_V_6_reg_592_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1156_p2 = ap_const_lv1_1))) then 
                t_V_6_reg_592 <= ap_const_lv4_5;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1324_p2 = ap_const_lv1_1))) then 
                t_V_6_reg_592 <= ind_1_V_fu_1388_p2;
            end if; 
        end if;
    end process;

    t_V_7_reg_616_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1156_p2 = ap_const_lv1_1))) then 
                t_V_7_reg_616 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1324_p2 = ap_const_lv1_1))) then 
                t_V_7_reg_616 <= round_V_reg_1828;
            end if; 
        end if;
    end process;

    t_V_8_reg_447_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_699_p2 = ap_const_lv1_1))) then 
                t_V_8_reg_447 <= ap_const_lv3_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_853_p2 = ap_const_lv1_1))) then 
                t_V_8_reg_447 <= round_V_1_reg_1554;
            end if; 
        end if;
    end process;

    t_V_9_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_914_p2 = ap_const_lv1_1))) then 
                t_V_9_reg_493 <= ind_1_V_2_fu_933_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_26_fu_803_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1559 = ap_const_lv1_1)))) then 
                t_V_9_reg_493 <= zext_ln214_fu_826_p1;
            end if; 
        end if;
    end process;

    t_V_reg_604_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1156_p2 = ap_const_lv1_1))) then 
                t_V_reg_604 <= ap_const_lv2_3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1324_p2 = ap_const_lv1_1))) then 
                t_V_reg_604 <= ind_2_V_fu_1382_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                A_local_V_6_reg_1933 <= A_local_V_6_fu_1453_p3;
                gammas_sums_R_load_reg_1940 <= gammas_sums_R_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1324_p2 = ap_const_lv1_0))) then
                big_W_V_addr_3_reg_1882 <= zext_ln544_71_fu_1372_p1(8 - 1 downto 0);
                ret_V_99_reg_1877 <= ret_V_99_fu_1367_p2;
                    zext_ln215_12_reg_1872(7 downto 0) <= zext_ln215_12_fu_1363_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln887_27_fu_1412_p2 = ap_const_lv1_1))) then
                big_W_V_addr_5_reg_1911 <= zext_ln544_75_fu_1422_p1(8 - 1 downto 0);
                big_W_V_addr_6_reg_1922 <= zext_ln544_74_fu_1432_p1(8 - 1 downto 0);
                j_V_10_reg_1928 <= j_V_10_fu_1447_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                bm_pow_R_load_reg_1742 <= bm_pow_R_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_V_26_reg_1572 <= i_V_26_fu_773_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln883_reg_1559 = ap_const_lv1_0))) then
                i_V_27_reg_1590 <= i_V_27_fu_809_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                i_V_28_reg_1768 <= i_V_28_fu_1162_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_V_29_reg_1661 <= i_V_29_fu_919_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_V_reg_1508 <= i_V_fu_705_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1266_p2 = ap_const_lv1_0))) then
                icmp_ln879_reg_1838 <= icmp_ln879_fu_1288_p2;
                shl_ln210_reg_1833 <= shl_ln210_fu_1282_p2;
                shl_ln215_reg_1844 <= shl_ln215_fu_1294_p2;
                    zext_ln210_1_reg_1854(5 downto 4) <= zext_ln210_1_fu_1316_p1(5 downto 4);
                    zext_ln215_11_reg_1849(7 downto 0) <= zext_ln215_11_fu_1300_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_731_p2 = ap_const_lv1_0))) then
                icmp_ln883_reg_1559 <= icmp_ln883_fu_743_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                j_V_11_reg_1690 <= j_V_11_fu_954_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                j_V_reg_1953 <= j_V_fu_1479_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                k_V_reg_1623 <= k_V_fu_859_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                l_V_1_reg_1704 <= l_V_1_fu_975_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                l_V_reg_1750 <= l_V_fu_1104_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_949_p2 = ap_const_lv1_0))) then
                    lhs_V_30_reg_1695(8 downto 0) <= lhs_V_30_fu_965_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                m_V_reg_1862 <= m_V_fu_1329_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                n_V_reg_1802 <= n_V_fu_1209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_853_p2 = ap_const_lv1_0))) then
                or_ln179_reg_1644 <= or_ln179_fu_895_p2;
                shl_ln176_reg_1634 <= shl_ln176_fu_873_p2;
                shl_ln177_reg_1639 <= shl_ln177_fu_883_p2;
                    zext_ln176_2_reg_1648(7 downto 0) <= zext_ln176_2_fu_904_p1(7 downto 0);
                    zext_ln176_reg_1628(1 downto 0) <= zext_ln176_fu_865_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                p_A_V_load_1_reg_1789 <= p_A_V_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state15))) then
                reg_693 <= p_A_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_gf_mul_fu_682_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                ret_V_106_reg_1945 <= ret_V_106_fu_1468_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln887_29_fu_1098_p2 = ap_const_lv1_0))) then
                ret_V_115_reg_1755 <= ret_V_115_fu_1131_p2;
                tmp_4_reg_1760 <= tmp_4_fu_1140_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_28_fu_969_p2 = ap_const_lv1_1))) then
                ret_V_116_reg_1715 <= ret_V_116_fu_1002_p2;
                ret_V_117_reg_1720 <= ret_V_117_fu_1008_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_leaves_butterfly_fu_671_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ret_V_95_reg_1794(7 downto 5) <= ret_V_95_fu_1196_p3(7 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                round_V_1_reg_1554 <= round_V_1_fu_737_p2;
                    zext_ln166_reg_1546(2 downto 0) <= zext_ln166_fu_727_p1(2 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                round_V_reg_1828 <= round_V_fu_1272_p2;
                    zext_ln208_reg_1820(3 downto 0) <= zext_ln208_fu_1258_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_28_fu_969_p2 = ap_const_lv1_0))) then
                shl_ln790_1_reg_1709 <= shl_ln790_1_fu_985_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_731_p2 = ap_const_lv1_0) and (icmp_ln883_fu_743_p2 = ap_const_lv1_0))) then
                    shl_ln_reg_1564(6 downto 5) <= shl_ln_fu_759_p3(6 downto 5);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1156_p2 = ap_const_lv1_0))) then
                trunc_ln1352_reg_1773 <= trunc_ln1352_fu_1168_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1644 = ap_const_lv1_0))) then
                trunc_ln321_1_reg_1735 <= trunc_ln321_1_fu_1050_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_26_fu_803_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1559 = ap_const_lv1_1)))) then
                    zext_ln174_reg_1615(4 downto 0) <= zext_ln174_fu_849_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_914_p2 = ap_const_lv1_0))) then
                    zext_ln177_1_reg_1672(3 downto 0) <= zext_ln177_1_fu_929_p1(3 downto 0);
                    zext_ln215_13_reg_1666(3 downto 0) <= zext_ln215_13_fu_925_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln887_26_fu_803_p2 = ap_const_lv1_0) and (icmp_ln883_reg_1559 = ap_const_lv1_0))) then
                    zext_ln544_68_reg_1595(5 downto 0) <= zext_ln544_68_fu_815_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln166_reg_1546(7 downto 3) <= "00000";
    shl_ln_reg_1564(4 downto 0) <= "00000";
    zext_ln544_68_reg_1595(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln174_reg_1615(5) <= '0';
    zext_ln176_reg_1628(4 downto 2) <= "000";
    zext_ln176_2_reg_1648(8) <= '0';
    zext_ln215_13_reg_1666(9 downto 4) <= "000000";
    zext_ln177_1_reg_1672(5 downto 4) <= "00";
    lhs_V_30_reg_1695(9) <= '0';
    ret_V_95_reg_1794(4 downto 0) <= "00000";
    zext_ln208_reg_1820(7 downto 4) <= "0000";
    zext_ln215_11_reg_1849(8) <= '0';
    zext_ln210_1_reg_1854(3 downto 0) <= "0000";
    zext_ln210_1_reg_1854(7 downto 6) <= "00";
    zext_ln215_12_reg_1872(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state15, ap_CS_fsm_state2, icmp_ln887_fu_699_p2, ap_CS_fsm_state4, icmp_ln883_fu_743_p2, icmp_ln883_reg_1559, icmp_ln166_fu_731_p2, ap_CS_fsm_state5, icmp_ln887_25_fu_767_p2, ap_CS_fsm_state8, icmp_ln887_26_fu_803_p2, ap_CS_fsm_state10, icmp_ln174_fu_853_p2, or_ln179_reg_1644, ap_CS_fsm_state11, icmp_ln176_fu_914_p2, ap_CS_fsm_state12, icmp_ln177_fu_949_p2, ap_CS_fsm_state13, icmp_ln887_28_fu_969_p2, ap_CS_fsm_state18, icmp_ln887_29_fu_1098_p2, ap_CS_fsm_state20, icmp_ln199_fu_1156_p2, ap_CS_fsm_state22, grp_leaves_butterfly_fu_671_ap_done, ap_CS_fsm_state23, icmp_ln887_24_fu_1203_p2, ap_CS_fsm_state25, icmp_ln202_fu_1236_p2, ap_CS_fsm_state26, icmp_ln208_fu_1266_p2, ap_CS_fsm_state27, icmp_ln210_fu_1324_p2, ap_CS_fsm_state29, icmp_ln887_27_fu_1412_p2, ap_CS_fsm_state31, grp_gf_mul_fu_682_ap_done, ap_CS_fsm_state33, icmp_ln230_fu_1473_p2, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_699_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_731_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln166_fu_731_p2 = ap_const_lv1_0) and (icmp_ln883_fu_743_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln887_25_fu_767_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and ((icmp_ln887_26_fu_803_p2 = ap_const_lv1_1) or (icmp_ln883_reg_1559 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln174_fu_853_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln176_fu_914_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln177_fu_949_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state13;
                end if;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln887_28_fu_969_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (or_ln179_reg_1644 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state18 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state18) and (icmp_ln887_29_fu_1098_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (icmp_ln199_fu_1156_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state21;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((grp_leaves_butterfly_fu_671_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln887_24_fu_1203_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state25;
                else
                    ap_NS_fsm <= ap_ST_fsm_state24;
                end if;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state25 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1236_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state25;
                end if;
            when ap_ST_fsm_state26 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state26) and (icmp_ln208_fu_1266_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln210_fu_1324_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln887_27_fu_1412_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state30;
                end if;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((grp_gf_mul_fu_682_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state32;
                else
                    ap_NS_fsm <= ap_ST_fsm_state31;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln230_fu_1473_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    A_local_V_5_fu_1394_p3 <= 
        p_A_V_q0 when (icmp_ln879_reg_1838(0) = '1') else 
        big_W_V_q0;
    A_local_V_6_fu_1453_p3 <= 
        p_03119_1_reg_638 when (icmp_ln879_reg_1838(0) = '1') else 
        big_W_V_q0;
    add_ln166_fu_908_p2 <= std_logic_vector(unsigned(indvars_iv_reg_435) + unsigned(ap_const_lv3_7));
    add_ln321_5_fu_1494_p2 <= std_logic_vector(unsigned(zext_ln321_7_fu_1490_p1) + unsigned(ap_const_lv10_19A));
    add_ln321_fu_711_p2 <= std_logic_vector(unsigned(p_02419_0_reg_423) + unsigned(ap_const_lv6_1E));
    add_ln544_fu_783_p2 <= std_logic_vector(unsigned(shl_ln_reg_1564) + unsigned(zext_ln215_fu_779_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_block_state17_on_subcall_done_assign_proc : process(or_ln179_reg_1644, grp_gf_mul_fu_682_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((grp_gf_mul_fu_682_ap_done = ap_const_logic_0) and (or_ln179_reg_1644 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state33, icmp_ln230_fu_1473_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln230_fu_1473_p2 = ap_const_lv1_1)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state33, icmp_ln230_fu_1473_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln230_fu_1473_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    big_W_V_address0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29, big_W_V_addr_6_reg_1922, ap_CS_fsm_state30, ap_CS_fsm_state33, zext_ln544_71_fu_1372_p1, zext_ln544_75_fu_1422_p1, zext_ln544_69_fu_1485_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            big_W_V_address0 <= zext_ln544_69_fu_1485_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            big_W_V_address0 <= big_W_V_addr_6_reg_1922;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            big_W_V_address0 <= zext_ln544_75_fu_1422_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            big_W_V_address0 <= zext_ln544_71_fu_1372_p1(8 - 1 downto 0);
        else 
            big_W_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    big_W_V_address1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state27, big_W_V_addr_3_reg_1882, ap_CS_fsm_state28, big_W_V_addr_5_reg_1911, big_W_V_addr_6_reg_1922, ap_CS_fsm_state31, ap_CS_fsm_state24, ap_CS_fsm_state32, zext_ln544_66_fu_1227_p1, zext_ln544_73_fu_1247_p1, zext_ln544_72_fu_1377_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            big_W_V_address1 <= big_W_V_addr_5_reg_1911;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            big_W_V_address1 <= big_W_V_addr_6_reg_1922;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            big_W_V_address1 <= big_W_V_addr_3_reg_1882;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            big_W_V_address1 <= zext_ln544_72_fu_1377_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            big_W_V_address1 <= zext_ln544_73_fu_1247_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            big_W_V_address1 <= zext_ln544_66_fu_1227_p1(8 - 1 downto 0);
        else 
            big_W_V_address1 <= "XXXXXXXX";
        end if; 
    end process;


    big_W_V_ce0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state33)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            big_W_V_ce0 <= ap_const_logic_1;
        else 
            big_W_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    big_W_V_ce1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state27, ap_CS_fsm_state28, ap_CS_fsm_state31, grp_gf_mul_fu_682_ap_done, ap_CS_fsm_state24, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state25) or ((grp_gf_mul_fu_682_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)))) then 
            big_W_V_ce1 <= ap_const_logic_1;
        else 
            big_W_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    big_W_V_d1_assign_proc : process(ap_CS_fsm_state25, ap_CS_fsm_state28, ret_V_106_reg_1945, ap_CS_fsm_state31, w16_q0, ap_CS_fsm_state24, ap_CS_fsm_state32, ret_V_100_fu_1401_p2, ret_V_118_fu_1461_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            big_W_V_d1 <= ret_V_106_reg_1945;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            big_W_V_d1 <= ret_V_118_fu_1461_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            big_W_V_d1 <= ret_V_100_fu_1401_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            big_W_V_d1 <= ap_const_lv8_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            big_W_V_d1 <= w16_q0;
        else 
            big_W_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    big_W_V_we1_assign_proc : process(ap_CS_fsm_state25, icmp_ln202_fu_1236_p2, ap_CS_fsm_state28, ap_CS_fsm_state31, grp_gf_mul_fu_682_ap_done, ap_CS_fsm_state24, ap_CS_fsm_state32)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state28) or ((grp_gf_mul_fu_682_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state31)) or ((ap_const_logic_1 = ap_CS_fsm_state25) and (icmp_ln202_fu_1236_p2 = ap_const_lv1_0)))) then 
            big_W_V_we1 <= ap_const_logic_1;
        else 
            big_W_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    bm_pow_R_address0 <= zext_ln544_78_fu_1045_p1(5 - 1 downto 0);

    bm_pow_R_ce0_assign_proc : process(ap_CS_fsm_state15)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            bm_pow_R_ce0 <= ap_const_logic_1;
        else 
            bm_pow_R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fr_V_address0_assign_proc : process(ap_CS_fsm_state8, zext_ln544_68_fu_815_p1, ap_CS_fsm_state7, zext_ln544_63_fu_798_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            fr_V_address0 <= zext_ln544_68_fu_815_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fr_V_address0 <= zext_ln544_63_fu_798_p1(5 - 1 downto 0);
        else 
            fr_V_address0 <= "XXXXX";
        end if; 
    end process;


    fr_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            fr_V_ce0 <= ap_const_logic_1;
        else 
            fr_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    fr_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            fr_V_we0 <= ap_const_logic_1;
        else 
            fr_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    gammas_sums_R_address0 <= zext_ln544_77_fu_1442_p1(8 - 1 downto 0);

    gammas_sums_R_ce0_assign_proc : process(ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            gammas_sums_R_ce0 <= ap_const_logic_1;
        else 
            gammas_sums_R_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_gf_mul_fu_682_a_V_assign_proc : process(reg_693, or_ln179_reg_1644, gammas_sums_R_load_reg_1940, ap_CS_fsm_state31, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_gf_mul_fu_682_a_V <= gammas_sums_R_load_reg_1940;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1644 = ap_const_lv1_0))) then 
            grp_gf_mul_fu_682_a_V <= reg_693;
        else 
            grp_gf_mul_fu_682_a_V <= "XXXXXXXX";
        end if; 
    end process;

    grp_gf_mul_fu_682_ap_start <= grp_gf_mul_fu_682_ap_start_reg;

    grp_gf_mul_fu_682_b_V_assign_proc : process(or_ln179_reg_1644, bm_pow_R_load_reg_1742, A_local_V_6_reg_1933, ap_CS_fsm_state31, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            grp_gf_mul_fu_682_b_V <= A_local_V_6_reg_1933;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state17) and (or_ln179_reg_1644 = ap_const_lv1_0))) then 
            grp_gf_mul_fu_682_b_V <= bm_pow_R_load_reg_1742;
        else 
            grp_gf_mul_fu_682_b_V <= "XXXXXXXX";
        end if; 
    end process;

    grp_leaves_butterfly_fu_671_ap_start <= grp_leaves_butterfly_fu_671_ap_start_reg;
    i_V_26_fu_773_p2 <= std_logic_vector(unsigned(p_02419_1_reg_459) + unsigned(ap_const_lv6_1));
    i_V_27_fu_809_p2 <= std_logic_vector(unsigned(p_02419_2_reg_471) + unsigned(ap_const_lv6_1));
    i_V_28_fu_1162_p2 <= std_logic_vector(unsigned(p_02419_4_reg_558) + unsigned(ap_const_lv4_1));
    i_V_29_fu_919_p2 <= std_logic_vector(unsigned(p_02419_3_reg_513) + unsigned(ap_const_lv4_1));
    i_V_fu_705_p2 <= std_logic_vector(unsigned(p_02419_0_reg_423) + unsigned(ap_const_lv6_1));
    icmp_ln166_fu_731_p2 <= "1" when (t_V_8_reg_447 = ap_const_lv3_4) else "0";
    icmp_ln174_fu_853_p2 <= "1" when (p_01982_0_reg_482 = indvars_iv_reg_435) else "0";
    icmp_ln176_fu_914_p2 <= "1" when (p_02419_3_reg_513 = shl_ln176_reg_1634) else "0";
    icmp_ln177_fu_949_p2 <= "1" when (p_03344_0_reg_524 = shl_ln177_reg_1639) else "0";
    icmp_ln179_fu_889_p2 <= "0" when (p_01982_0_reg_482 = ap_const_lv3_0) else "1";
    icmp_ln199_fu_1156_p2 <= "1" when (p_02419_4_reg_558 = ap_const_lv4_8) else "0";
    icmp_ln202_fu_1236_p2 <= "1" when (p_02751_1_reg_581 = ap_const_lv6_20) else "0";
    icmp_ln208_fu_1266_p2 <= "1" when (t_V_6_reg_592 = ap_const_lv4_9) else "0";
    icmp_ln210_fu_1324_p2 <= "1" when (p_02813_0_reg_627 = shl_ln210_reg_1833) else "0";
    icmp_ln230_fu_1473_p2 <= "1" when (p_03344_2_reg_659 = ap_const_lv9_100) else "0";
    icmp_ln879_fu_1288_p2 <= "1" when (t_V_7_reg_616 = ap_const_lv3_0) else "0";
    icmp_ln883_fu_743_p2 <= "1" when (t_V_8_reg_447 = ap_const_lv3_0) else "0";
    icmp_ln887_24_fu_1203_p2 <= "1" when (p_02751_0_reg_569 = ap_const_lv5_10) else "0";
    icmp_ln887_25_fu_767_p2 <= "1" when (p_02419_1_reg_459 = ap_const_lv6_20) else "0";
    icmp_ln887_26_fu_803_p2 <= "1" when (p_02419_2_reg_471 = ap_const_lv6_20) else "0";
    icmp_ln887_27_fu_1412_p2 <= "1" when (unsigned(p_03344_1_reg_648) < unsigned(shl_ln215_reg_1844)) else "0";
    icmp_ln887_28_fu_969_p2 <= "1" when (p_02390_0_reg_535 = ap_const_lv3_4) else "0";
    icmp_ln887_29_fu_1098_p2 <= "1" when (p_02390_1_reg_547 = ap_const_lv3_4) else "0";
    icmp_ln887_fu_699_p2 <= "1" when (p_02419_0_reg_423 = ap_const_lv6_20) else "0";
    ind_1_V_1_fu_820_p2 <= std_logic_vector(signed(ap_const_lv3_5) - signed(t_V_8_reg_447));
    ind_1_V_2_fu_933_p2 <= std_logic_vector(signed(t_V_9_reg_493) + signed(ap_const_lv4_F));
    ind_1_V_fu_1388_p2 <= std_logic_vector(unsigned(t_V_6_reg_592) + unsigned(ap_const_lv4_1));
    ind_2_V_1_fu_834_p2 <= (trunc_ln214_fu_830_p1 xor ap_const_lv2_3);
    ind_2_V_2_fu_939_p2 <= std_logic_vector(unsigned(t_V_10_reg_503) + unsigned(ap_const_lv2_3));
    ind_2_V_fu_1382_p2 <= std_logic_vector(unsigned(t_V_reg_604) + unsigned(ap_const_lv2_3));
    j_V_10_fu_1447_p2 <= std_logic_vector(unsigned(p_03344_1_reg_648) + unsigned(ap_const_lv8_1));
    j_V_11_fu_954_p2 <= std_logic_vector(unsigned(p_03344_0_reg_524) + unsigned(ap_const_lv4_1));
    j_V_fu_1479_p2 <= std_logic_vector(unsigned(p_03344_2_reg_659) + unsigned(ap_const_lv9_1));
    k_V_fu_859_p2 <= std_logic_vector(unsigned(p_01982_0_reg_482) + unsigned(ap_const_lv3_1));
    l_V_1_fu_975_p2 <= std_logic_vector(unsigned(p_02390_0_reg_535) + unsigned(ap_const_lv3_1));
    l_V_fu_1104_p2 <= std_logic_vector(unsigned(p_02390_1_reg_547) + unsigned(ap_const_lv3_1));
    lhs_V_30_fu_965_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_5_fu_960_p2),10));
    m_V_fu_1329_p2 <= std_logic_vector(unsigned(p_02813_0_reg_627) + unsigned(ap_const_lv4_1));
    n_V_1_fu_1252_p2 <= std_logic_vector(unsigned(p_02751_1_reg_581) + unsigned(ap_const_lv6_1));
    n_V_fu_1209_p2 <= std_logic_vector(unsigned(p_02751_0_reg_569) + unsigned(ap_const_lv5_1));
    or_ln179_fu_895_p2 <= (icmp_ln883_reg_1559 or icmp_ln179_fu_889_p2);

    p_A_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state20, ap_CS_fsm_state27, zext_ln544_65_fu_793_p1, zext_ln544_76_fu_1027_p1, zext_ln544_61_fu_1180_p1, zext_ln544_70_fu_1353_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            p_A_V_address0 <= zext_ln544_70_fu_1353_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_A_V_address0 <= zext_ln544_61_fu_1180_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            p_A_V_address0 <= zext_ln544_76_fu_1027_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            p_A_V_address0 <= zext_ln544_65_fu_793_p1(5 - 1 downto 0);
        else 
            p_A_V_address0 <= "XXXXX";
        end if; 
    end process;


    p_A_V_address1_assign_proc : process(zext_ln544_68_reg_1595, ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19, zext_ln544_fu_722_p1, zext_ln544_79_fu_1152_p1, zext_ln544_62_fu_1191_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            p_A_V_address1 <= zext_ln544_62_fu_1191_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_A_V_address1 <= zext_ln544_79_fu_1152_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_A_V_address1 <= zext_ln544_68_reg_1595(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_A_V_address1 <= zext_ln544_fu_722_p1(5 - 1 downto 0);
        else 
            p_A_V_address1 <= "XXXXX";
        end if; 
    end process;


    p_A_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state14, ap_CS_fsm_state20, ap_CS_fsm_state27)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            p_A_V_ce0 <= ap_const_logic_1;
        else 
            p_A_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_A_V_ce1_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            p_A_V_ce1 <= ap_const_logic_1;
        else 
            p_A_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    p_A_V_d1_assign_proc : process(rs_mem_1_q0, tmp_4_reg_1760, fr_V_q0, ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_A_V_d1 <= tmp_4_reg_1760;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            p_A_V_d1 <= fr_V_q0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            p_A_V_d1 <= rs_mem_1_q0;
        else 
            p_A_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    p_A_V_we1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state9, ap_CS_fsm_state19)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            p_A_V_we1 <= ap_const_logic_1;
        else 
            p_A_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    perm_r_address0 <= zext_ln544_64_fu_788_p1(7 - 1 downto 0);

    perm_r_ce0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            perm_r_ce0 <= ap_const_logic_1;
        else 
            perm_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    r_V_5_fu_960_p2 <= std_logic_vector(shift_left(unsigned(zext_ln887_1_fu_945_p1),to_integer(unsigned('0' & zext_ln176_2_reg_1648(9-1 downto 0)))));
    r_V_6_fu_840_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv8_C0),to_integer(unsigned('0' & zext_ln166_reg_1546(8-1 downto 0)))));
    r_V_fu_1358_p2 <= std_logic_vector(shift_left(unsigned(zext_ln887_fu_1320_p1),to_integer(unsigned('0' & zext_ln208_reg_1820(8-1 downto 0)))));
    ret_V_100_fu_1401_p2 <= (big_W_V_q1 xor A_local_V_5_fu_1394_p3);
    ret_V_101_fu_1242_p2 <= std_logic_vector(unsigned(ret_V_95_reg_1794) + unsigned(zext_ln202_fu_1232_p1));
    ret_V_102_fu_1417_p2 <= std_logic_vector(unsigned(ret_V_99_reg_1877) + unsigned(zext_ln1598_fu_1408_p1));
    ret_V_103_fu_1427_p2 <= std_logic_vector(unsigned(zext_ln1598_fu_1408_p1) + unsigned(zext_ln215_12_reg_1872));
    ret_V_104_fu_1437_p2 <= std_logic_vector(unsigned(zext_ln210_1_reg_1854) + unsigned(p_03344_1_reg_648));
    ret_V_106_fu_1468_p2 <= (ret_V_118_fu_1461_p2 xor A_local_V_6_reg_1933);
    ret_V_109_fu_1017_p2 <= std_logic_vector(unsigned(lhs_V_30_reg_1695) + unsigned(rhs_V_39_fu_1014_p1));
    ret_V_110_fu_1022_p2 <= std_logic_vector(unsigned(ret_V_109_fu_1017_p2) + unsigned(zext_ln215_13_reg_1666));
    ret_V_111_fu_845_p1 <= r_V_6_fu_840_p2(5 - 1 downto 0);
    ret_V_112_fu_1035_p2 <= std_logic_vector(unsigned(zext_ln174_reg_1615) + unsigned(zext_ln215_16_fu_1032_p1));
    ret_V_113_fu_1040_p2 <= std_logic_vector(unsigned(ret_V_112_fu_1035_p2) + unsigned(zext_ln177_1_reg_1672));
    ret_V_114_fu_1126_p2 <= std_logic_vector(unsigned(lhs_V_30_reg_1695) + unsigned(rhs_V_40_fu_1122_p1));
    ret_V_115_fu_1131_p2 <= std_logic_vector(unsigned(ret_V_114_fu_1126_p2) + unsigned(zext_ln215_13_reg_1666));
    ret_V_116_fu_1002_p2 <= (xor_ln1357_fu_996_p2 xor lhs_V_26_fu_184);
    ret_V_117_fu_1008_p2 <= (p_C_3_V_fu_188 xor lhs_V_26_fu_184);
    ret_V_118_fu_1461_p2 <= (grp_gf_mul_fu_682_ap_return xor big_W_V_q0);
    ret_V_2_fu_1308_p3 <= (trunc_ln1352_1_fu_1304_p1 & ap_const_lv4_0);
    ret_V_93_fu_1185_p2 <= (ret_V_fu_1172_p3 or ap_const_lv5_1);
    ret_V_94_fu_753_p2 <= std_logic_vector(signed(ap_const_lv2_3) + signed(trunc_ln1354_fu_749_p1));
    ret_V_95_fu_1196_p3 <= (trunc_ln1352_reg_1773 & ap_const_lv5_0);
    ret_V_96_fu_1220_p3 <= (trunc_ln1352_reg_1773 & p_02751_0_reg_569);
    ret_V_97_fu_1339_p3 <= (trunc_ln1352_2_fu_1335_p1 & ap_const_lv2_0);
    ret_V_98_fu_1347_p2 <= (ret_V_97_fu_1339_p3 or ap_const_lv5_2);
    ret_V_99_fu_1367_p2 <= std_logic_vector(unsigned(zext_ln215_12_fu_1363_p1) + unsigned(zext_ln215_11_reg_1849));
    ret_V_fu_1172_p3 <= (trunc_ln1352_fu_1168_p1 & ap_const_lv2_0);
    rhs_V_39_fu_1014_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln790_1_reg_1709),10));
    rhs_V_40_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln790_fu_1117_p2),10));
    round_V_1_fu_737_p2 <= std_logic_vector(unsigned(t_V_8_reg_447) + unsigned(ap_const_lv3_1));
    round_V_fu_1272_p2 <= std_logic_vector(unsigned(t_V_7_reg_616) + unsigned(ap_const_lv3_1));
    rs_mem_1_address0 <= zext_ln321_fu_717_p1(10 - 1 downto 0);
    rs_mem_1_address1 <= zext_ln321_8_fu_1500_p1(10 - 1 downto 0);

    rs_mem_1_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            rs_mem_1_ce0 <= ap_const_logic_1;
        else 
            rs_mem_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rs_mem_1_ce1_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            rs_mem_1_ce1 <= ap_const_logic_1;
        else 
            rs_mem_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    rs_mem_1_d1 <= big_W_V_q0;

    rs_mem_1_we1_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            rs_mem_1_we1 <= ap_const_logic_1;
        else 
            rs_mem_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln215_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(t_V_9_reg_493),8));

    shl_ln176_fu_873_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln176_1_fu_869_p1(4-1 downto 0)))));
    shl_ln177_fu_883_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln177_fu_879_p1(4-1 downto 0)))));
    shl_ln210_fu_1282_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv4_1),to_integer(unsigned('0' & zext_ln210_fu_1278_p1(4-1 downto 0)))));
    shl_ln215_fu_1294_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv8_10),to_integer(unsigned('0' & zext_ln208_1_fu_1262_p1(8-1 downto 0)))));
    shl_ln790_1_fu_985_p2 <= std_logic_vector(shift_left(unsigned(zext_ln790_fu_981_p1),to_integer(unsigned('0' & zext_ln176_reg_1628(5-1 downto 0)))));
    shl_ln790_fu_1117_p2 <= std_logic_vector(shift_left(unsigned(zext_ln790_1_fu_1113_p1),to_integer(unsigned('0' & zext_ln176_reg_1628(5-1 downto 0)))));
    shl_ln_fu_759_p3 <= (ret_V_94_fu_753_p2 & ap_const_lv5_0);
    tmp_4_fu_1140_p5 <= p_02390_1_reg_547(2 - 1 downto 0);
    trunc_ln1352_1_fu_1304_p1 <= t_V_7_reg_616(2 - 1 downto 0);
    trunc_ln1352_2_fu_1335_p1 <= p_02813_0_reg_627(3 - 1 downto 0);
    trunc_ln1352_fu_1168_p1 <= p_02419_4_reg_558(3 - 1 downto 0);
    trunc_ln1354_fu_749_p1 <= t_V_8_reg_447(2 - 1 downto 0);
    trunc_ln214_fu_830_p1 <= t_V_8_reg_447(2 - 1 downto 0);
    trunc_ln321_1_fu_1050_p1 <= p_02390_0_reg_535(2 - 1 downto 0);
    trunc_ln321_fu_1054_p1 <= p_02390_0_reg_535(2 - 1 downto 0);

    w16_address0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, grp_leaves_butterfly_fu_671_small_w_V_address0, zext_ln544_67_fu_1215_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            w16_address0 <= zext_ln544_67_fu_1215_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_address0 <= grp_leaves_butterfly_fu_671_small_w_V_address0;
        else 
            w16_address0 <= "XXXX";
        end if; 
    end process;


    w16_ce0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state23, grp_leaves_butterfly_fu_671_small_w_V_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            w16_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_ce0 <= grp_leaves_butterfly_fu_671_small_w_V_ce0;
        else 
            w16_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    w16_ce1_assign_proc : process(ap_CS_fsm_state22, grp_leaves_butterfly_fu_671_small_w_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_ce1 <= grp_leaves_butterfly_fu_671_small_w_V_ce1;
        else 
            w16_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    w16_we1_assign_proc : process(ap_CS_fsm_state22, grp_leaves_butterfly_fu_671_small_w_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            w16_we1 <= grp_leaves_butterfly_fu_671_small_w_V_we1;
        else 
            w16_we1 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln1357_fu_996_p2 <= (p_C_3_V_fu_188 xor lhs_V_25_fu_180);
    zext_ln1598_fu_1408_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_1_reg_648),9));
    zext_ln166_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_8_reg_447),8));
    zext_ln174_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_111_fu_845_p1),6));
    zext_ln176_1_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_10_reg_503),4));
    zext_ln176_2_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln215_fu_900_p1),9));
    zext_ln176_fu_865_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_10_reg_503),5));
    zext_ln177_1_fu_929_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_3_reg_513),6));
    zext_ln177_fu_879_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_01982_0_reg_482),4));
    zext_ln202_fu_1232_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02751_1_reg_581),8));
    zext_ln208_1_fu_1262_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_7_reg_616),8));
    zext_ln208_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_6_reg_592),8));
    zext_ln210_1_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_2_fu_1308_p3),8));
    zext_ln210_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_604),4));
    zext_ln214_fu_826_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ind_1_V_1_fu_820_p2),4));
    zext_ln215_11_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln215_fu_1294_p2),9));
    zext_ln215_12_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1358_p2),9));
    zext_ln215_13_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_3_reg_513),10));
    zext_ln215_16_fu_1032_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln790_1_reg_1709),6));
    zext_ln215_fu_779_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_1_reg_459),7));
    zext_ln321_7_fu_1490_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_2_reg_659),10));
    zext_ln321_8_fu_1500_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_5_fu_1494_p2),64));
    zext_ln321_fu_717_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln321_fu_711_p2),64));
    zext_ln544_61_fu_1180_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_1172_p3),64));
    zext_ln544_62_fu_1191_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_93_fu_1185_p2),64));
    zext_ln544_63_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_1_reg_459),64));
    zext_ln544_64_fu_788_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln544_fu_783_p2),64));
    zext_ln544_65_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(perm_r_q0),64));
    zext_ln544_66_fu_1227_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_96_fu_1220_p3),64));
    zext_ln544_67_fu_1215_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02751_0_reg_569),64));
    zext_ln544_68_fu_815_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_2_reg_471),64));
    zext_ln544_69_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_2_reg_659),64));
    zext_ln544_70_fu_1353_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_98_fu_1347_p2),64));
    zext_ln544_71_fu_1372_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_99_fu_1367_p2),64));
    zext_ln544_72_fu_1377_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_fu_1358_p2),64));
    zext_ln544_73_fu_1247_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_101_fu_1242_p2),64));
    zext_ln544_74_fu_1432_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_103_fu_1427_p2),64));
    zext_ln544_75_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_102_fu_1417_p2),64));
    zext_ln544_76_fu_1027_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_110_fu_1022_p2),64));
    zext_ln544_77_fu_1442_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_104_fu_1437_p2),64));
    zext_ln544_78_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_113_fu_1040_p2),64));
    zext_ln544_79_fu_1152_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_115_reg_1755),64));
    zext_ln544_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02419_0_reg_423),64));
    zext_ln790_1_fu_1113_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02390_1_reg_547),5));
    zext_ln790_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02390_0_reg_535),5));
    zext_ln887_1_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_03344_0_reg_524),9));
    zext_ln887_fu_1320_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_02813_0_reg_627),8));
end behav;
