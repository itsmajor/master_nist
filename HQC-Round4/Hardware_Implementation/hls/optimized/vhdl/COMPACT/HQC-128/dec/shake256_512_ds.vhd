-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity shake256_512_ds is
  port (
    ap_clk            : in  std_logic;
    ap_rst            : in  std_logic;
    ap_start          : in  std_logic;
    ap_done           : out std_logic;
    ap_idle           : out std_logic;
    ap_ready          : out std_logic;
    output_V_address0 : out std_logic_vector (2 downto 0);
    output_V_ce0      : out std_logic;
    output_V_we0      : out std_logic;
    output_V_d0       : out std_logic_vector (63 downto 0);
    input_V_address0  : out std_logic_vector (12 downto 0);
    input_V_ce0       : out std_logic;
    input_V_q0        : in  std_logic_vector (7 downto 0);
    input_V_address1  : out std_logic_vector (12 downto 0);
    input_V_ce1       : out std_logic;
    input_V_q1        : in  std_logic_vector (7 downto 0);
    inlen_V           : in  std_logic_vector (13 downto 0);
    domain_V          : in  std_logic_vector (3 downto 0));
end;


architecture behav of shake256_512_ds is
  constant ap_const_logic_1               : std_logic                      := '1';
  constant ap_const_logic_0               : std_logic                      := '0';
  constant ap_ST_fsm_state1               : std_logic_vector (24 downto 0) := "0000000000000000000000001";
  constant ap_ST_fsm_state2               : std_logic_vector (24 downto 0) := "0000000000000000000000010";
  constant ap_ST_fsm_state3               : std_logic_vector (24 downto 0) := "0000000000000000000000100";
  constant ap_ST_fsm_state4               : std_logic_vector (24 downto 0) := "0000000000000000000001000";
  constant ap_ST_fsm_state5               : std_logic_vector (24 downto 0) := "0000000000000000000010000";
  constant ap_ST_fsm_state6               : std_logic_vector (24 downto 0) := "0000000000000000000100000";
  constant ap_ST_fsm_state7               : std_logic_vector (24 downto 0) := "0000000000000000001000000";
  constant ap_ST_fsm_state8               : std_logic_vector (24 downto 0) := "0000000000000000010000000";
  constant ap_ST_fsm_state9               : std_logic_vector (24 downto 0) := "0000000000000000100000000";
  constant ap_ST_fsm_state10              : std_logic_vector (24 downto 0) := "0000000000000001000000000";
  constant ap_ST_fsm_state11              : std_logic_vector (24 downto 0) := "0000000000000010000000000";
  constant ap_ST_fsm_state12              : std_logic_vector (24 downto 0) := "0000000000000100000000000";
  constant ap_ST_fsm_state13              : std_logic_vector (24 downto 0) := "0000000000001000000000000";
  constant ap_ST_fsm_state14              : std_logic_vector (24 downto 0) := "0000000000010000000000000";
  constant ap_ST_fsm_state15              : std_logic_vector (24 downto 0) := "0000000000100000000000000";
  constant ap_ST_fsm_state16              : std_logic_vector (24 downto 0) := "0000000001000000000000000";
  constant ap_ST_fsm_state17              : std_logic_vector (24 downto 0) := "0000000010000000000000000";
  constant ap_ST_fsm_state18              : std_logic_vector (24 downto 0) := "0000000100000000000000000";
  constant ap_ST_fsm_state19              : std_logic_vector (24 downto 0) := "0000001000000000000000000";
  constant ap_ST_fsm_state20              : std_logic_vector (24 downto 0) := "0000010000000000000000000";
  constant ap_ST_fsm_state21              : std_logic_vector (24 downto 0) := "0000100000000000000000000";
  constant ap_ST_fsm_state22              : std_logic_vector (24 downto 0) := "0001000000000000000000000";
  constant ap_ST_fsm_state23              : std_logic_vector (24 downto 0) := "0010000000000000000000000";
  constant ap_ST_fsm_state24              : std_logic_vector (24 downto 0) := "0100000000000000000000000";
  constant ap_ST_fsm_state25              : std_logic_vector (24 downto 0) := "1000000000000000000000000";
  constant ap_const_lv32_0                : std_logic_vector (31 downto 0) := "00000000000000000000000000000000";
  constant ap_const_lv32_3                : std_logic_vector (31 downto 0) := "00000000000000000000000000000011";
  constant ap_const_lv32_9                : std_logic_vector (31 downto 0) := "00000000000000000000000000001001";
  constant ap_const_lv32_A                : std_logic_vector (31 downto 0) := "00000000000000000000000000001010";
  constant ap_const_lv32_4                : std_logic_vector (31 downto 0) := "00000000000000000000000000000100";
  constant ap_const_lv32_B                : std_logic_vector (31 downto 0) := "00000000000000000000000000001011";
  constant ap_const_lv32_5                : std_logic_vector (31 downto 0) := "00000000000000000000000000000101";
  constant ap_const_lv32_C                : std_logic_vector (31 downto 0) := "00000000000000000000000000001100";
  constant ap_const_lv32_1                : std_logic_vector (31 downto 0) := "00000000000000000000000000000001";
  constant ap_const_lv1_1                 : std_logic_vector (0 downto 0)  := "1";
  constant ap_const_lv32_2                : std_logic_vector (31 downto 0) := "00000000000000000000000000000010";
  constant ap_const_lv1_0                 : std_logic_vector (0 downto 0)  := "0";
  constant ap_const_lv32_6                : std_logic_vector (31 downto 0) := "00000000000000000000000000000110";
  constant ap_const_lv32_8                : std_logic_vector (31 downto 0) := "00000000000000000000000000001000";
  constant ap_const_boolean_0             : boolean                        := false;
  constant ap_const_lv32_D                : std_logic_vector (31 downto 0) := "00000000000000000000000000001101";
  constant ap_const_lv32_10               : std_logic_vector (31 downto 0) := "00000000000000000000000000010000";
  constant ap_const_lv32_11               : std_logic_vector (31 downto 0) := "00000000000000000000000000010001";
  constant ap_const_lv32_17               : std_logic_vector (31 downto 0) := "00000000000000000000000000010111";
  constant ap_const_lv5_0                 : std_logic_vector (4 downto 0)  := "00000";
  constant ap_const_lv16_0                : std_logic_vector (15 downto 0) := "0000000000000000";
  constant ap_const_lv9_0                 : std_logic_vector (8 downto 0)  := "000000000";
  constant ap_const_lv32_F                : std_logic_vector (31 downto 0) := "00000000000000000000000000001111";
  constant ap_const_lv4_0                 : std_logic_vector (3 downto 0)  := "0000";
  constant ap_const_lv32_16               : std_logic_vector (31 downto 0) := "00000000000000000000000000010110";
  constant ap_const_lv32_18               : std_logic_vector (31 downto 0) := "00000000000000000000000000011000";
  constant ap_const_lv32_7                : std_logic_vector (31 downto 0) := "00000000000000000000000000000111";
  constant ap_const_lv32_E                : std_logic_vector (31 downto 0) := "00000000000000000000000000001110";
  constant ap_const_lv32_15               : std_logic_vector (31 downto 0) := "00000000000000000000000000010101";
  constant ap_const_lv64_0                : std_logic_vector (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
  constant ap_const_lv5_19                : std_logic_vector (4 downto 0)  := "11001";
  constant ap_const_lv32_12               : std_logic_vector (31 downto 0) := "00000000000000000000000000010010";
  constant ap_const_lv32_13               : std_logic_vector (31 downto 0) := "00000000000000000000000000010011";
  constant ap_const_lv5_10                : std_logic_vector (4 downto 0)  := "10000";
  constant ap_const_lv32_14               : std_logic_vector (31 downto 0) := "00000000000000000000000000010100";
  constant ap_const_lv64_9                : std_logic_vector (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
  constant ap_const_lv16_1                : std_logic_vector (15 downto 0) := "0000000000000001";
  constant ap_const_lv16_2                : std_logic_vector (15 downto 0) := "0000000000000010";
  constant ap_const_lv16_3                : std_logic_vector (15 downto 0) := "0000000000000011";
  constant ap_const_lv16_4                : std_logic_vector (15 downto 0) := "0000000000000100";
  constant ap_const_lv16_5                : std_logic_vector (15 downto 0) := "0000000000000101";
  constant ap_const_lv16_6                : std_logic_vector (15 downto 0) := "0000000000000110";
  constant ap_const_lv5_1A                : std_logic_vector (4 downto 0)  := "11010";
  constant ap_const_lv5_1                 : std_logic_vector (4 downto 0)  := "00001";
  constant ap_const_lv17_8                : std_logic_vector (16 downto 0) := "00000000000001000";
  constant ap_const_lv16_7                : std_logic_vector (15 downto 0) := "0000000000000111";
  constant ap_const_lv9_8                 : std_logic_vector (8 downto 0)  := "000001000";
  constant ap_const_lv9_87                : std_logic_vector (8 downto 0)  := "010000111";
  constant ap_const_lv16_8                : std_logic_vector (15 downto 0) := "0000000000001000";
  constant ap_const_lv3_6                 : std_logic_vector (2 downto 0)  := "110";
  constant ap_const_lv3_5                 : std_logic_vector (2 downto 0)  := "101";
  constant ap_const_lv3_4                 : std_logic_vector (2 downto 0)  := "100";
  constant ap_const_lv3_3                 : std_logic_vector (2 downto 0)  := "011";
  constant ap_const_lv3_2                 : std_logic_vector (2 downto 0)  := "010";
  constant ap_const_lv3_1                 : std_logic_vector (2 downto 0)  := "001";
  constant ap_const_lv3_0                 : std_logic_vector (2 downto 0)  := "000";
  constant ap_const_lv4_1                 : std_logic_vector (3 downto 0)  := "0001";
  constant ap_const_lv25_1F00             : std_logic_vector (24 downto 0) := "0000000000001111100000000";
  constant ap_const_lv25_1F               : std_logic_vector (24 downto 0) := "0000000000000000000011111";
  constant ap_const_lv25_1000000          : std_logic_vector (24 downto 0) := "1000000000000000000000000";
  constant ap_const_lv25_1F0000           : std_logic_vector (24 downto 0) := "0000111110000000000000000";
  constant ap_const_lv41_10000000000      : std_logic_vector (40 downto 0) := "10000000000000000000000000000000000000000";
  constant ap_const_lv41_1F00000000       : std_logic_vector (40 downto 0) := "00001111100000000000000000000000000000000";
  constant ap_const_lv3_7                 : std_logic_vector (2 downto 0)  := "111";
  constant ap_const_lv57_100000000000000  : std_logic_vector (56 downto 0) := "100000000000000000000000000000000000000000000000000000000";
  constant ap_const_lv57_1F000000000000   : std_logic_vector (56 downto 0) := "000011111000000000000000000000000000000000000000000000000";
  constant ap_const_lv64_8000000000000000 : std_logic_vector (63 downto 0) := "1000000000000000000000000000000000000000000000000000000000000000";
  constant ap_const_lv4_8                 : std_logic_vector (3 downto 0)  := "1000";
  constant ap_const_boolean_1             : boolean                        := true;

  signal ap_CS_fsm                                          : std_logic_vector (24 downto 0) := "0000000000000000000000001";
  attribute fsm_encoding                                    : string;
  attribute fsm_encoding of ap_CS_fsm                       : signal is "none";
  signal ap_CS_fsm_state1                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state1                : signal is "none";
  signal state_V_address0                                   : std_logic_vector (4 downto 0);
  signal state_V_ce0                                        : std_logic;
  signal state_V_q0                                         : std_logic_vector (63 downto 0);
  signal state_V_address1                                   : std_logic_vector (4 downto 0);
  signal state_V_ce1                                        : std_logic;
  signal state_V_we1                                        : std_logic;
  signal state_V_d1                                         : std_logic_vector (63 downto 0);
  signal reg_507                                            : std_logic_vector (7 downto 0);
  signal ap_CS_fsm_state4                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state4                : signal is "none";
  signal ap_CS_fsm_state10                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state10               : signal is "none";
  signal reg_511                                            : std_logic_vector (7 downto 0);
  signal ap_CS_fsm_state11                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state11               : signal is "none";
  signal reg_516                                            : std_logic_vector (7 downto 0);
  signal ap_CS_fsm_state5                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state5                : signal is "none";
  signal reg_521                                            : std_logic_vector (7 downto 0);
  signal ap_CS_fsm_state12                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state12               : signal is "none";
  signal reg_526                                            : std_logic_vector (8 downto 0);
  signal ap_CS_fsm_state6                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state6                : signal is "none";
  signal ap_CS_fsm_state13                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state13               : signal is "none";
  signal reg_530                                            : std_logic_vector (7 downto 0);
  signal reg_535                                            : std_logic_vector (7 downto 0);
  signal j_V_fu_546_p2                                      : std_logic_vector (4 downto 0);
  signal ap_CS_fsm_state2                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state2                : signal is "none";
  signal zext_ln215_fu_557_p1                               : std_logic_vector (16 downto 0);
  signal zext_ln215_reg_1207                                : std_logic_vector (16 downto 0);
  signal icmp_ln887_fu_540_p2                               : std_logic_vector (0 downto 0);
  signal ap_CS_fsm_state3                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state3                : signal is "none";
  signal icmp_ln891_fu_570_p2                               : std_logic_vector (0 downto 0);
  signal len_V_fu_590_p1                                    : std_logic_vector (2 downto 0);
  signal len_V_reg_1230                                     : std_logic_vector (2 downto 0);
  signal state_V_addr_1_reg_1272                            : std_logic_vector (4 downto 0);
  signal icmp_ln891_1_fu_667_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln891_1_reg_1278                              : std_logic_vector (0 downto 0);
  signal ap_CS_fsm_state7                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state7                : signal is "none";
  signal i_V_fu_678_p2                                      : std_logic_vector (15 downto 0);
  signal ap_CS_fsm_state9                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state9                : signal is "none";
  signal grp_KeccakF1600_StatePer_fu_432_ap_ready           : std_logic;
  signal grp_KeccakF1600_StatePer_fu_432_ap_done            : std_logic;
  signal ap_block_state9_on_subcall_done                    : boolean;
  signal input_V_load_6_reg_1317                            : std_logic_vector (7 downto 0);
  signal state_V_addr_2_reg_1322                            : std_logic_vector (4 downto 0);
  signal cnt_V_3_fu_968_p2                                  : std_logic_vector (8 downto 0);
  signal ap_CS_fsm_state14                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state14               : signal is "none";
  signal icmp_ln891_2_fu_981_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln891_2_reg_1333                              : std_logic_vector (0 downto 0);
  signal ret_V_22_fu_992_p1                                 : std_logic_vector (2 downto 0);
  signal ret_V_22_reg_1337                                  : std_logic_vector (2 downto 0);
  signal ap_CS_fsm_state17                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state17               : signal is "none";
  signal r_V_reg_1348                                       : std_logic_vector (4 downto 0);
  signal state_V_addr_4_reg_1353                            : std_logic_vector (4 downto 0);
  signal ap_CS_fsm_state18                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state18               : signal is "none";
  signal i_V_4_fu_1163_p2                                   : std_logic_vector (3 downto 0);
  signal i_V_4_reg_1362                                     : std_logic_vector (3 downto 0);
  signal ap_CS_fsm_state24                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state24               : signal is "none";
  signal zext_ln544_27_fu_1169_p1                           : std_logic_vector (63 downto 0);
  signal zext_ln544_27_reg_1367                             : std_logic_vector (63 downto 0);
  signal icmp_ln887_8_fu_1157_p2                            : std_logic_vector (0 downto 0);
  signal grp_KeccakF1600_StatePer_fu_432_ap_start           : std_logic;
  signal grp_KeccakF1600_StatePer_fu_432_ap_idle            : std_logic;
  signal grp_KeccakF1600_StatePer_fu_432_state_V_6_address0 : std_logic_vector (4 downto 0);
  signal grp_KeccakF1600_StatePer_fu_432_state_V_6_ce0      : std_logic;
  signal grp_KeccakF1600_StatePer_fu_432_state_V_6_address1 : std_logic_vector (4 downto 0);
  signal grp_KeccakF1600_StatePer_fu_432_state_V_6_ce1      : std_logic;
  signal grp_KeccakF1600_StatePer_fu_432_state_V_6_we1      : std_logic;
  signal grp_KeccakF1600_StatePer_fu_432_state_V_6_d1       : std_logic_vector (63 downto 0);
  signal p_018_0_reg_387                                    : std_logic_vector (4 downto 0);
  signal ap_phi_mux_p_0260_0_i_phi_fu_402_p4                : std_logic_vector (15 downto 0);
  signal p_0260_0_i_reg_398                                 : std_logic_vector (15 downto 0);
  signal p_01676_2_i_reg_410                                : std_logic_vector (8 downto 0);
  signal ap_CS_fsm_state16                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state16               : signal is "none";
  signal ap_block_state16_on_subcall_done                   : boolean;
  signal t_V_reg_421                                        : std_logic_vector (3 downto 0);
  signal ap_CS_fsm_state23                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state23               : signal is "none";
  signal ap_CS_fsm_state25                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state25               : signal is "none";
  signal grp_KeccakF1600_StatePer_fu_432_ap_start_reg       : std_logic                      := '0';
  signal ap_CS_fsm_state8                                   : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state8                : signal is "none";
  signal ap_CS_fsm_state15                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state15               : signal is "none";
  signal ap_CS_fsm_state22                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state22               : signal is "none";
  signal zext_ln544_fu_552_p1                               : std_logic_vector (63 downto 0);
  signal zext_ln544_17_fu_575_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_18_fu_580_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_10_fu_585_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_19_fu_593_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_20_fu_598_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_21_fu_603_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_22_fu_608_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_23_fu_613_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_24_fu_624_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_25_fu_629_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_11_fu_684_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_12_fu_689_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_13_fu_694_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_14_fu_699_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_15_fu_704_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_16_fu_709_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_26_fu_714_p1                            : std_logic_vector (63 downto 0);
  signal zext_ln544_28_fu_1006_p1                           : std_logic_vector (63 downto 0);
  signal cnt_V_2_fu_174                                     : std_logic_vector (8 downto 0);
  signal cnt_V_fu_654_p2                                    : std_logic_vector (8 downto 0);
  signal xor_ln719_fu_660_p2                                : std_logic_vector (63 downto 0);
  signal xor_ln719_1_fu_974_p2                              : std_logic_vector (63 downto 0);
  signal zext_ln209_fu_987_p1                               : std_logic_vector (63 downto 0);
  signal ap_CS_fsm_state19                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state19               : signal is "none";
  signal xor_ln719_2_fu_1143_p2                             : std_logic_vector (63 downto 0);
  signal ap_CS_fsm_state20                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state20               : signal is "none";
  signal ap_CS_fsm_state21                                  : std_logic;
  attribute fsm_encoding of ap_CS_fsm_state21               : signal is "none";
  signal xor_ln719_3_fu_1150_p2                             : std_logic_vector (63 downto 0);
  signal grp_fu_457_p0                                      : std_logic_vector (15 downto 0);
  signal zext_ln215_2_fu_560_p1                             : std_logic_vector (16 downto 0);
  signal ret_V_fu_564_p2                                    : std_logic_vector (16 downto 0);
  signal grp_fu_457_p2                                      : std_logic_vector (15 downto 0);
  signal grp_fu_464_p2                                      : std_logic_vector (15 downto 0);
  signal grp_fu_470_p2                                      : std_logic_vector (15 downto 0);
  signal grp_fu_476_p2                                      : std_logic_vector (15 downto 0);
  signal grp_fu_482_p2                                      : std_logic_vector (15 downto 0);
  signal grp_fu_491_p2                                      : std_logic_vector (15 downto 0);
  signal ret_V_20_fu_618_p2                                 : std_logic_vector (15 downto 0);
  signal grp_fu_497_p4                                      : std_logic_vector (4 downto 0);
  signal ret_V_23_fu_634_p9                                 : std_logic_vector (63 downto 0);
  signal tmp_5_fu_729_p4                                    : std_logic_vector (19 downto 0);
  signal tmp_7_fu_753_p6                                    : std_logic_vector (35 downto 0);
  signal tmp_s_fu_785_p8                                    : std_logic_vector (51 downto 0);
  signal icmp_ln117_6_fu_854_p2                             : std_logic_vector (0 downto 0);
  signal zext_ln214_fu_719_p1                               : std_logic_vector (11 downto 0);
  signal tmp_4_fu_722_p3                                    : std_logic_vector (11 downto 0);
  signal select_ln117_fu_859_p3                             : std_logic_vector (11 downto 0);
  signal icmp_ln117_5_fu_849_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln117_4_fu_844_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln117_3_fu_839_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln117_2_fu_834_p2                             : std_logic_vector (0 downto 0);
  signal zext_ln214_3_fu_766_p1                             : std_logic_vector (43 downto 0);
  signal tmp_9_fu_770_p7                                    : std_logic_vector (43 downto 0);
  signal select_ln117_1_fu_883_p3                           : std_logic_vector (43 downto 0);
  signal icmp_ln117_1_fu_829_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln117_fu_824_p2                               : std_logic_vector (0 downto 0);
  signal zext_ln321_fu_802_p1                               : std_logic_vector (59 downto 0);
  signal tmp_1_fu_806_p9                                    : std_logic_vector (59 downto 0);
  signal zext_ln214_2_fu_738_p1                             : std_logic_vector (27 downto 0);
  signal tmp_6_fu_742_p5                                    : std_logic_vector (27 downto 0);
  signal or_ln117_fu_871_p2                                 : std_logic_vector (0 downto 0);
  signal zext_ln117_fu_867_p1                               : std_logic_vector (27 downto 0);
  signal select_ln117_3_fu_909_p3                           : std_logic_vector (27 downto 0);
  signal select_ln117_4_fu_917_p3                           : std_logic_vector (27 downto 0);
  signal or_ln117_1_fu_877_p2                               : std_logic_vector (0 downto 0);
  signal or_ln117_2_fu_895_p2                               : std_logic_vector (0 downto 0);
  signal zext_ln117_1_fu_891_p1                             : std_logic_vector (59 downto 0);
  signal select_ln117_2_fu_901_p3                           : std_logic_vector (59 downto 0);
  signal or_ln117_3_fu_929_p2                               : std_logic_vector (0 downto 0);
  signal zext_ln117_2_fu_925_p1                             : std_logic_vector (59 downto 0);
  signal select_ln117_5_fu_935_p3                           : std_logic_vector (59 downto 0);
  signal select_ln117_6_fu_943_p3                           : std_logic_vector (59 downto 0);
  signal zext_ln700_fu_955_p1                               : std_logic_vector (3 downto 0);
  signal add_ln700_fu_958_p2                                : std_logic_vector (3 downto 0);
  signal zext_ln700_1_fu_964_p1                             : std_logic_vector (8 downto 0);
  signal zext_ln117_3_fu_951_p1                             : std_logic_vector (63 downto 0);
  signal icmp_ln21_fu_1010_p2                               : std_logic_vector (0 downto 0);
  signal icmp_ln21_2_fu_1028_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln21_1_fu_1023_p2                             : std_logic_vector (0 downto 0);
  signal or_ln21_fu_1041_p2                                 : std_logic_vector (0 downto 0);
  signal select_ln21_1_fu_1033_p3                           : std_logic_vector (24 downto 0);
  signal select_ln21_fu_1015_p3                             : std_logic_vector (24 downto 0);
  signal select_ln21_2_fu_1047_p3                           : std_logic_vector (24 downto 0);
  signal sext_ln21_fu_1055_p1                               : std_logic_vector (28 downto 0);
  signal icmp_ln21_4_fu_1068_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln21_3_fu_1063_p2                             : std_logic_vector (0 downto 0);
  signal or_ln21_1_fu_1081_p2                               : std_logic_vector (0 downto 0);
  signal select_ln21_3_fu_1073_p3                           : std_logic_vector (40 downto 0);
  signal zext_ln21_fu_1059_p1                               : std_logic_vector (40 downto 0);
  signal select_ln21_4_fu_1087_p3                           : std_logic_vector (40 downto 0);
  signal sext_ln21_1_fu_1095_p1                             : std_logic_vector (44 downto 0);
  signal icmp_ln21_6_fu_1108_p2                             : std_logic_vector (0 downto 0);
  signal icmp_ln21_5_fu_1103_p2                             : std_logic_vector (0 downto 0);
  signal empty_23_fu_1121_p2                                : std_logic_vector (0 downto 0);
  signal select_ln21_5_i_fu_1113_p3                         : std_logic_vector (56 downto 0);
  signal zext_ln21_1_fu_1099_p1                             : std_logic_vector (56 downto 0);
  signal p_0186_0_i_fu_1127_p3                              : std_logic_vector (56 downto 0);
  signal p_0186_0_i_cast29_fu_1135_p1                       : std_logic_vector (60 downto 0);
  signal p_0186_0_i_cast_fu_1139_p1                         : std_logic_vector (63 downto 0);
  signal ap_NS_fsm                                          : std_logic_vector (24 downto 0);

  component KeccakF1600_SoloPer is
    port (
      ap_clk             : in  std_logic;
      ap_rst             : in  std_logic;
      ap_start           : in  std_logic;
      ap_done            : out std_logic;
      ap_idle            : out std_logic;
      ap_ready           : out std_logic;
      state_V_address0 : out std_logic_vector (4 downto 0);
      state_V_ce0      : out std_logic;
      state_V_q0       : in  std_logic_vector (63 downto 0);
      state_V_address1 : out std_logic_vector (4 downto 0);
      state_V_ce1      : out std_logic;
      state_V_we1      : out std_logic;
      state_V_d1       : out std_logic_vector (63 downto 0));
  end component;


  component shake256_512_ds_sCeG is
    generic (
      DataWidth    : integer;
      AddressRange : integer;
      AddressWidth : integer);
    port (
      clk      : in  std_logic;
      reset    : in  std_logic;
      address0 : in  std_logic_vector (4 downto 0);
      ce0      : in  std_logic;
      q0       : out std_logic_vector (63 downto 0);
      address1 : in  std_logic_vector (4 downto 0);
      ce1      : in  std_logic;
      we1      : in  std_logic;
      d1       : in  std_logic_vector (63 downto 0));
  end component;



begin
  state_V_U : component shake256_512_ds_sCeG
    generic map (
      DataWidth    => 64,
      AddressRange => 26,
      AddressWidth => 5)
    port map (
      clk      => ap_clk,
      reset    => ap_rst,
      address0 => state_V_address0,
      ce0      => state_V_ce0,
      q0       => state_V_q0,
      address1 => state_V_address1,
      ce1      => state_V_ce1,
      we1      => state_V_we1,
      d1       => state_V_d1);

  grp_KeccakF1600_StatePer_fu_432 : component KeccakF1600_SoloPer
    port map (
      ap_clk             => ap_clk,
      ap_rst             => ap_rst,
      ap_start           => grp_KeccakF1600_StatePer_fu_432_ap_start,
      ap_done            => grp_KeccakF1600_StatePer_fu_432_ap_done,
      ap_idle            => grp_KeccakF1600_StatePer_fu_432_ap_idle,
      ap_ready           => grp_KeccakF1600_StatePer_fu_432_ap_ready,
      state_V_address0 => grp_KeccakF1600_StatePer_fu_432_state_V_6_address0,
      state_V_ce0      => grp_KeccakF1600_StatePer_fu_432_state_V_6_ce0,
      state_V_q0       => state_V_q0,
      state_V_address1 => grp_KeccakF1600_StatePer_fu_432_state_V_6_address1,
      state_V_ce1      => grp_KeccakF1600_StatePer_fu_432_state_V_6_ce1,
      state_V_we1      => grp_KeccakF1600_StatePer_fu_432_state_V_6_we1,
      state_V_d1       => grp_KeccakF1600_StatePer_fu_432_state_V_6_d1);





  ap_CS_fsm_assign_proc : process(ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (ap_rst = '1') then
        ap_CS_fsm <= ap_ST_fsm_state1;
      else
        ap_CS_fsm <= ap_NS_fsm;
      end if;
    end if;
  end process;


  grp_KeccakF1600_StatePer_fu_432_ap_start_reg_assign_proc : process(ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (ap_rst = '1') then
        grp_KeccakF1600_StatePer_fu_432_ap_start_reg <= ap_const_logic_0;
      else
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state8))) then
          grp_KeccakF1600_StatePer_fu_432_ap_start_reg <= ap_const_logic_1;
        elsif ((grp_KeccakF1600_StatePer_fu_432_ap_ready = ap_const_logic_1)) then
          grp_KeccakF1600_StatePer_fu_432_ap_start_reg <= ap_const_logic_0;
        end if;
      end if;
    end if;
  end process;


  cnt_V_2_fu_174_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln891_1_fu_667_p2 = ap_const_lv1_0))) then
        cnt_V_2_fu_174 <= cnt_V_fu_654_p2;
      elsif (((ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_540_p2 = ap_const_lv1_1)))) then
        cnt_V_2_fu_174 <= ap_const_lv9_0;
      end if;
    end if;
  end process;

  p_01676_2_i_reg_410_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln891_2_fu_981_p2 = ap_const_lv1_0))) then
        p_01676_2_i_reg_410 <= cnt_V_3_fu_968_p2;
      elsif (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1))) then
        p_01676_2_i_reg_410 <= ap_const_lv9_0;
      end if;
    end if;
  end process;

  p_018_0_reg_387_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_540_p2 = ap_const_lv1_0))) then
        p_018_0_reg_387 <= j_V_fu_546_p2;
      elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
        p_018_0_reg_387 <= ap_const_lv5_0;
      end if;
    end if;
  end process;

  p_0260_0_i_reg_398_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_540_p2 = ap_const_lv1_1))) then
        p_0260_0_i_reg_398 <= ap_const_lv16_0;
      elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_boolean_0 = ap_block_state9_on_subcall_done))) then
        p_0260_0_i_reg_398 <= i_V_fu_678_p2;
      end if;
    end if;
  end process;

  reg_511_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
        reg_511 <= input_V_q0;
      elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then
        reg_511 <= input_V_q1;
      end if;
    end if;
  end process;

  reg_516_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
        reg_516 <= input_V_q1;
      elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then
        reg_516 <= input_V_q0;
      end if;
    end if;
  end process;

  reg_521_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
        reg_521 <= input_V_q0;
      elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then
        reg_521 <= input_V_q1;
      end if;
    end if;
  end process;

  reg_530_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
        reg_530 <= input_V_q1;
      elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then
        reg_530 <= input_V_q0;
      end if;
    end if;
  end process;

  reg_535_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
        reg_535 <= input_V_q0;
      elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then
        reg_535 <= input_V_q1;
      end if;
    end if;
  end process;

  t_V_reg_421_assign_proc : process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
        t_V_reg_421 <= i_V_4_reg_1362;
      elsif (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_KeccakF1600_StatePer_fu_432_ap_done = ap_const_logic_1))) then
        t_V_reg_421 <= ap_const_lv4_0;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
        i_V_4_reg_1362 <= i_V_4_fu_1163_p2;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
        icmp_ln891_1_reg_1278 <= icmp_ln891_1_fu_667_p2;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
        icmp_ln891_2_reg_1333 <= icmp_ln891_2_fu_981_p2;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
        input_V_load_6_reg_1317 <= input_V_q1;
        state_V_addr_2_reg_1322 <= zext_ln544_26_fu_714_p1(5 - 1 downto 0);
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln891_fu_570_p2 = ap_const_lv1_1))) then
        len_V_reg_1230 <= len_V_fu_590_p1;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
        r_V_reg_1348      <= p_01676_2_i_reg_410(7 downto 3);
        ret_V_22_reg_1337 <= ret_V_22_fu_992_p1;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4))) then
        reg_507 <= input_V_q0;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state6))) then
        reg_526 <= cnt_V_2_fu_174;
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
        state_V_addr_1_reg_1272 <= zext_ln544_25_fu_629_p1(5 - 1 downto 0);
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
        state_V_addr_4_reg_1353 <= zext_ln544_28_fu_1006_p1(5 - 1 downto 0);
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_540_p2 = ap_const_lv1_1))) then
        zext_ln215_reg_1207(13 downto 0) <= zext_ln215_fu_557_p1(13 downto 0);
      end if;
    end if;
  end process;
  process (ap_clk)
  begin
    if (ap_clk'event and ap_clk = '1') then
      if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln887_8_fu_1157_p2 = ap_const_lv1_0))) then
        zext_ln544_27_reg_1367(3 downto 0) <= zext_ln544_27_fu_1169_p1(3 downto 0);
      end if;
    end if;
  end process;
  zext_ln215_reg_1207(16 downto 14)   <= "000";
  zext_ln544_27_reg_1367(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

  ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln887_fu_540_p2, ap_CS_fsm_state3, icmp_ln891_fu_570_p2, icmp_ln891_1_fu_667_p2, ap_CS_fsm_state7, ap_CS_fsm_state9, grp_KeccakF1600_StatePer_fu_432_ap_done, ap_block_state9_on_subcall_done, ap_CS_fsm_state14, icmp_ln891_2_fu_981_p2, ap_CS_fsm_state24, icmp_ln887_8_fu_1157_p2, ap_CS_fsm_state16, ap_block_state16_on_subcall_done, ap_CS_fsm_state23)
  begin
    case ap_CS_fsm is
      when ap_ST_fsm_state1 =>
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
          ap_NS_fsm <= ap_ST_fsm_state2;
        else
          ap_NS_fsm <= ap_ST_fsm_state1;
        end if;
      when ap_ST_fsm_state2 =>
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_540_p2 = ap_const_lv1_1))) then
          ap_NS_fsm <= ap_ST_fsm_state3;
        else
          ap_NS_fsm <= ap_ST_fsm_state2;
        end if;
      when ap_ST_fsm_state3 =>
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln891_fu_570_p2 = ap_const_lv1_1))) then
          ap_NS_fsm <= ap_ST_fsm_state10;
        else
          ap_NS_fsm <= ap_ST_fsm_state4;
        end if;
      when ap_ST_fsm_state4 =>
        ap_NS_fsm <= ap_ST_fsm_state5;
      when ap_ST_fsm_state5 =>
        ap_NS_fsm <= ap_ST_fsm_state6;
      when ap_ST_fsm_state6 =>
        ap_NS_fsm <= ap_ST_fsm_state7;
      when ap_ST_fsm_state7 =>
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln891_1_fu_667_p2 = ap_const_lv1_0))) then
          ap_NS_fsm <= ap_ST_fsm_state9;
        else
          ap_NS_fsm <= ap_ST_fsm_state8;
        end if;
      when ap_ST_fsm_state8 =>
        ap_NS_fsm <= ap_ST_fsm_state9;
      when ap_ST_fsm_state9 =>
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (ap_const_boolean_0 = ap_block_state9_on_subcall_done))) then
          ap_NS_fsm <= ap_ST_fsm_state3;
        else
          ap_NS_fsm <= ap_ST_fsm_state9;
        end if;
      when ap_ST_fsm_state10 =>
        ap_NS_fsm <= ap_ST_fsm_state11;
      when ap_ST_fsm_state11 =>
        ap_NS_fsm <= ap_ST_fsm_state12;
      when ap_ST_fsm_state12 =>
        ap_NS_fsm <= ap_ST_fsm_state13;
      when ap_ST_fsm_state13 =>
        ap_NS_fsm <= ap_ST_fsm_state14;
      when ap_ST_fsm_state14 =>
        if (((ap_const_logic_1 = ap_CS_fsm_state14) and (icmp_ln891_2_fu_981_p2 = ap_const_lv1_0))) then
          ap_NS_fsm <= ap_ST_fsm_state16;
        else
          ap_NS_fsm <= ap_ST_fsm_state15;
        end if;
      when ap_ST_fsm_state15 =>
        ap_NS_fsm <= ap_ST_fsm_state16;
      when ap_ST_fsm_state16 =>
        if (((ap_const_boolean_0 = ap_block_state16_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
          ap_NS_fsm <= ap_ST_fsm_state17;
        else
          ap_NS_fsm <= ap_ST_fsm_state16;
        end if;
      when ap_ST_fsm_state17 =>
        ap_NS_fsm <= ap_ST_fsm_state18;
      when ap_ST_fsm_state18 =>
        ap_NS_fsm <= ap_ST_fsm_state19;
      when ap_ST_fsm_state19 =>
        ap_NS_fsm <= ap_ST_fsm_state20;
      when ap_ST_fsm_state20 =>
        ap_NS_fsm <= ap_ST_fsm_state21;
      when ap_ST_fsm_state21 =>
        ap_NS_fsm <= ap_ST_fsm_state22;
      when ap_ST_fsm_state22 =>
        ap_NS_fsm <= ap_ST_fsm_state23;
      when ap_ST_fsm_state23 =>
        if (((ap_const_logic_1 = ap_CS_fsm_state23) and (grp_KeccakF1600_StatePer_fu_432_ap_done = ap_const_logic_1))) then
          ap_NS_fsm <= ap_ST_fsm_state24;
        else
          ap_NS_fsm <= ap_ST_fsm_state23;
        end if;
      when ap_ST_fsm_state24 =>
        if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln887_8_fu_1157_p2 = ap_const_lv1_1))) then
          ap_NS_fsm <= ap_ST_fsm_state1;
        else
          ap_NS_fsm <= ap_ST_fsm_state25;
        end if;
      when ap_ST_fsm_state25 =>
        ap_NS_fsm <= ap_ST_fsm_state24;
      when others =>
        ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
    end case;
  end process;
  add_ln700_fu_958_p2 <= std_logic_vector(unsigned(ap_const_lv4_1) + unsigned(zext_ln700_fu_955_p1));
  ap_CS_fsm_state1    <= ap_CS_fsm(0);
  ap_CS_fsm_state10   <= ap_CS_fsm(9);
  ap_CS_fsm_state11   <= ap_CS_fsm(10);
  ap_CS_fsm_state12   <= ap_CS_fsm(11);
  ap_CS_fsm_state13   <= ap_CS_fsm(12);
  ap_CS_fsm_state14   <= ap_CS_fsm(13);
  ap_CS_fsm_state15   <= ap_CS_fsm(14);
  ap_CS_fsm_state16   <= ap_CS_fsm(15);
  ap_CS_fsm_state17   <= ap_CS_fsm(16);
  ap_CS_fsm_state18   <= ap_CS_fsm(17);
  ap_CS_fsm_state19   <= ap_CS_fsm(18);
  ap_CS_fsm_state2    <= ap_CS_fsm(1);
  ap_CS_fsm_state20   <= ap_CS_fsm(19);
  ap_CS_fsm_state21   <= ap_CS_fsm(20);
  ap_CS_fsm_state22   <= ap_CS_fsm(21);
  ap_CS_fsm_state23   <= ap_CS_fsm(22);
  ap_CS_fsm_state24   <= ap_CS_fsm(23);
  ap_CS_fsm_state25   <= ap_CS_fsm(24);
  ap_CS_fsm_state3    <= ap_CS_fsm(2);
  ap_CS_fsm_state4    <= ap_CS_fsm(3);
  ap_CS_fsm_state5    <= ap_CS_fsm(4);
  ap_CS_fsm_state6    <= ap_CS_fsm(5);
  ap_CS_fsm_state7    <= ap_CS_fsm(6);
  ap_CS_fsm_state8    <= ap_CS_fsm(7);
  ap_CS_fsm_state9    <= ap_CS_fsm(8);

  ap_block_state16_on_subcall_done_assign_proc : process(grp_KeccakF1600_StatePer_fu_432_ap_done, icmp_ln891_2_reg_1333)
  begin
    ap_block_state16_on_subcall_done <= ((grp_KeccakF1600_StatePer_fu_432_ap_done = ap_const_logic_0) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1));
  end process;


  ap_block_state9_on_subcall_done_assign_proc : process(icmp_ln891_1_reg_1278, grp_KeccakF1600_StatePer_fu_432_ap_done)
  begin
    ap_block_state9_on_subcall_done <= ((grp_KeccakF1600_StatePer_fu_432_ap_done = ap_const_logic_0) and (icmp_ln891_1_reg_1278 = ap_const_lv1_1));
  end process;


  ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state24, icmp_ln887_8_fu_1157_p2)
  begin
    if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln887_8_fu_1157_p2 = ap_const_lv1_1)))) then
      ap_done <= ap_const_logic_1;
    else
      ap_done <= ap_const_logic_0;
    end if;
  end process;


  ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
  begin
    if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
      ap_idle <= ap_const_logic_1;
    else
      ap_idle <= ap_const_logic_0;
    end if;
  end process;

  ap_phi_mux_p_0260_0_i_phi_fu_402_p4 <= p_0260_0_i_reg_398;

  ap_ready_assign_proc : process(ap_CS_fsm_state24, icmp_ln887_8_fu_1157_p2)
  begin
    if (((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln887_8_fu_1157_p2 = ap_const_lv1_1))) then
      ap_ready <= ap_const_logic_1;
    else
      ap_ready <= ap_const_logic_0;
    end if;
  end process;

  cnt_V_3_fu_968_p2                        <= std_logic_vector(unsigned(reg_526) + unsigned(zext_ln700_1_fu_964_p1));
  cnt_V_fu_654_p2                          <= std_logic_vector(unsigned(reg_526) + unsigned(ap_const_lv9_8));
  empty_23_fu_1121_p2                      <= (icmp_ln21_6_fu_1108_p2 or icmp_ln21_5_fu_1103_p2);
  grp_KeccakF1600_StatePer_fu_432_ap_start <= grp_KeccakF1600_StatePer_fu_432_ap_start_reg;

  grp_fu_457_p0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state3, ap_phi_mux_p_0260_0_i_phi_fu_402_p4, p_0260_0_i_reg_398)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
      grp_fu_457_p0 <= p_0260_0_i_reg_398;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then
      grp_fu_457_p0 <= ap_phi_mux_p_0260_0_i_phi_fu_402_p4;
    else
      grp_fu_457_p0 <= "XXXXXXXXXXXXXXXX";
    end if;
  end process;

  grp_fu_457_p2           <= (grp_fu_457_p0 or ap_const_lv16_1);
  grp_fu_464_p2           <= (p_0260_0_i_reg_398 or ap_const_lv16_2);
  grp_fu_470_p2           <= (p_0260_0_i_reg_398 or ap_const_lv16_3);
  grp_fu_476_p2           <= (p_0260_0_i_reg_398 or ap_const_lv16_4);
  grp_fu_482_p2           <= (p_0260_0_i_reg_398 or ap_const_lv16_5);
  grp_fu_491_p2           <= (p_0260_0_i_reg_398 or ap_const_lv16_6);
  grp_fu_497_p4           <= cnt_V_2_fu_174(7 downto 3);
  i_V_4_fu_1163_p2        <= std_logic_vector(unsigned(t_V_reg_421) + unsigned(ap_const_lv4_1));
  i_V_fu_678_p2           <= std_logic_vector(unsigned(p_0260_0_i_reg_398) + unsigned(ap_const_lv16_8));
  icmp_ln117_1_fu_829_p2  <= "1" when (len_V_reg_1230 = ap_const_lv3_5)                           else "0";
  icmp_ln117_2_fu_834_p2  <= "1" when (len_V_reg_1230 = ap_const_lv3_4)                           else "0";
  icmp_ln117_3_fu_839_p2  <= "1" when (len_V_reg_1230 = ap_const_lv3_3)                           else "0";
  icmp_ln117_4_fu_844_p2  <= "1" when (len_V_reg_1230 = ap_const_lv3_2)                           else "0";
  icmp_ln117_5_fu_849_p2  <= "1" when (len_V_reg_1230 = ap_const_lv3_1)                           else "0";
  icmp_ln117_6_fu_854_p2  <= "1" when (len_V_reg_1230 = ap_const_lv3_0)                           else "0";
  icmp_ln117_fu_824_p2    <= "1" when (len_V_reg_1230 = ap_const_lv3_6)                           else "0";
  icmp_ln21_1_fu_1023_p2  <= "1" when (ret_V_22_reg_1337 = ap_const_lv3_2)                        else "0";
  icmp_ln21_2_fu_1028_p2  <= "1" when (ret_V_22_reg_1337 = ap_const_lv3_3)                        else "0";
  icmp_ln21_3_fu_1063_p2  <= "1" when (ret_V_22_reg_1337 = ap_const_lv3_4)                        else "0";
  icmp_ln21_4_fu_1068_p2  <= "1" when (ret_V_22_reg_1337 = ap_const_lv3_5)                        else "0";
  icmp_ln21_5_fu_1103_p2  <= "1" when (ret_V_22_reg_1337 = ap_const_lv3_6)                        else "0";
  icmp_ln21_6_fu_1108_p2  <= "1" when (ret_V_22_reg_1337 = ap_const_lv3_7)                        else "0";
  icmp_ln21_fu_1010_p2    <= "1" when (ret_V_22_reg_1337 = ap_const_lv3_1)                        else "0";
  icmp_ln887_8_fu_1157_p2 <= "1" when (t_V_reg_421 = ap_const_lv4_8)                              else "0";
  icmp_ln887_fu_540_p2    <= "1" when (p_018_0_reg_387 = ap_const_lv5_1A)                         else "0";
  icmp_ln891_1_fu_667_p2  <= "1" when (unsigned(cnt_V_fu_654_p2) > unsigned(ap_const_lv9_87))     else "0";
  icmp_ln891_2_fu_981_p2  <= "1" when (unsigned(cnt_V_3_fu_968_p2) > unsigned(ap_const_lv9_87))   else "0";
  icmp_ln891_fu_570_p2    <= "1" when (unsigned(zext_ln215_reg_1207) < unsigned(ret_V_fu_564_p2)) else "0";

  input_V_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state3, icmp_ln891_fu_570_p2, zext_ln544_17_fu_575_p1, zext_ln544_10_fu_585_p1, zext_ln544_19_fu_593_p1, zext_ln544_21_fu_603_p1, zext_ln544_23_fu_613_p1, zext_ln544_11_fu_684_p1, zext_ln544_13_fu_694_p1, zext_ln544_15_fu_704_p1)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
      input_V_address0 <= zext_ln544_15_fu_704_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then
      input_V_address0 <= zext_ln544_13_fu_694_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then
      input_V_address0 <= zext_ln544_11_fu_684_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then
      input_V_address0 <= zext_ln544_23_fu_613_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then
      input_V_address0 <= zext_ln544_21_fu_603_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then
      input_V_address0 <= zext_ln544_19_fu_593_p1(13 - 1 downto 0);
    elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln891_fu_570_p2 = ap_const_lv1_1))) then
      input_V_address0 <= zext_ln544_10_fu_585_p1(13 - 1 downto 0);
    elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln891_fu_570_p2 = ap_const_lv1_0))) then
      input_V_address0 <= zext_ln544_17_fu_575_p1(13 - 1 downto 0);
    else
      input_V_address0 <= "XXXXXXXXXXXXX";
    end if;
  end process;


  input_V_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state3, zext_ln544_18_fu_580_p1, zext_ln544_20_fu_598_p1, zext_ln544_22_fu_608_p1, zext_ln544_24_fu_624_p1, zext_ln544_12_fu_689_p1, zext_ln544_14_fu_699_p1, zext_ln544_16_fu_709_p1)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
      input_V_address1 <= zext_ln544_16_fu_709_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then
      input_V_address1 <= zext_ln544_14_fu_699_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then
      input_V_address1 <= zext_ln544_12_fu_689_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then
      input_V_address1 <= zext_ln544_24_fu_624_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then
      input_V_address1 <= zext_ln544_22_fu_608_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then
      input_V_address1 <= zext_ln544_20_fu_598_p1(13 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then
      input_V_address1 <= zext_ln544_18_fu_580_p1(13 - 1 downto 0);
    else
      input_V_address1 <= "XXXXXXXXXXXXX";
    end if;
  end process;


  input_V_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state3, icmp_ln891_fu_570_p2)
  begin
    if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln891_fu_570_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln891_fu_570_p2 = ap_const_lv1_0)))) then
      input_V_ce0 <= ap_const_logic_1;
    else
      input_V_ce0 <= ap_const_logic_0;
    end if;
  end process;


  input_V_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state5, ap_CS_fsm_state12, ap_CS_fsm_state6, ap_CS_fsm_state3)
  begin
    if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12))) then
      input_V_ce1 <= ap_const_logic_1;
    else
      input_V_ce1 <= ap_const_logic_0;
    end if;
  end process;

  j_V_fu_546_p2        <= std_logic_vector(unsigned(p_018_0_reg_387) + unsigned(ap_const_lv5_1));
  len_V_fu_590_p1      <= inlen_V(3 - 1 downto 0);
  or_ln117_1_fu_877_p2 <= (icmp_ln117_4_fu_844_p2 or icmp_ln117_3_fu_839_p2);
  or_ln117_2_fu_895_p2 <= (icmp_ln117_2_fu_834_p2 or icmp_ln117_1_fu_829_p2);
  or_ln117_3_fu_929_p2 <= (or_ln117_fu_871_p2 or or_ln117_1_fu_877_p2);
  or_ln117_fu_871_p2   <= (icmp_ln117_6_fu_854_p2 or icmp_ln117_5_fu_849_p2);
  or_ln21_1_fu_1081_p2 <= (icmp_ln21_4_fu_1068_p2 or icmp_ln21_3_fu_1063_p2);
  or_ln21_fu_1041_p2   <= (icmp_ln21_2_fu_1028_p2 or icmp_ln21_1_fu_1023_p2);
  output_V_address0    <= zext_ln544_27_reg_1367(3 - 1 downto 0);

  output_V_ce0_assign_proc : process(ap_CS_fsm_state25)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
      output_V_ce0 <= ap_const_logic_1;
    else
      output_V_ce0 <= ap_const_logic_0;
    end if;
  end process;

  output_V_d0 <= state_V_q0;

  output_V_we0_assign_proc : process(ap_CS_fsm_state25)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
      output_V_we0 <= ap_const_logic_1;
    else
      output_V_we0 <= ap_const_logic_0;
    end if;
  end process;

  p_0186_0_i_cast29_fu_1135_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_0186_0_i_fu_1127_p3), 61));

  p_0186_0_i_cast_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0186_0_i_cast29_fu_1135_p1), 64));
  p_0186_0_i_fu_1127_p3 <=
    select_ln21_5_i_fu_1113_p3 when (empty_23_fu_1121_p2(0) = '1') else
    zext_ln21_1_fu_1099_p1;
  ret_V_20_fu_618_p2 <= (p_0260_0_i_reg_398 or ap_const_lv16_7);
  ret_V_22_fu_992_p1 <= p_01676_2_i_reg_410(3 - 1 downto 0);
  ret_V_23_fu_634_p9 <= (((((((input_V_q1 & input_V_q0) & reg_535) & reg_530) & reg_521) & reg_516) & reg_511) & reg_507);
  ret_V_fu_564_p2    <= std_logic_vector(unsigned(zext_ln215_2_fu_560_p1) + unsigned(ap_const_lv17_8));
  select_ln117_1_fu_883_p3 <=
    zext_ln214_3_fu_766_p1 when (icmp_ln117_2_fu_834_p2(0) = '1') else
    tmp_9_fu_770_p7;
  select_ln117_2_fu_901_p3 <=
    zext_ln321_fu_802_p1 when (icmp_ln117_fu_824_p2(0) = '1') else
    tmp_1_fu_806_p9;
  select_ln117_3_fu_909_p3 <=
    zext_ln214_2_fu_738_p1 when (icmp_ln117_4_fu_844_p2(0) = '1') else
    tmp_6_fu_742_p5;
  select_ln117_4_fu_917_p3 <=
    zext_ln117_fu_867_p1 when (or_ln117_fu_871_p2(0) = '1') else
    select_ln117_3_fu_909_p3;
  select_ln117_5_fu_935_p3 <=
    zext_ln117_1_fu_891_p1 when (or_ln117_2_fu_895_p2(0) = '1') else
    select_ln117_2_fu_901_p3;
  select_ln117_6_fu_943_p3 <=
    zext_ln117_2_fu_925_p1 when (or_ln117_3_fu_929_p2(0) = '1') else
    select_ln117_5_fu_935_p3;
  select_ln117_fu_859_p3 <=
    zext_ln214_fu_719_p1 when (icmp_ln117_6_fu_854_p2(0) = '1') else
    tmp_4_fu_722_p3;
  select_ln21_1_fu_1033_p3 <=
    ap_const_lv25_1000000 when (icmp_ln21_2_fu_1028_p2(0) = '1') else
    ap_const_lv25_1F0000;
  select_ln21_2_fu_1047_p3 <=
    select_ln21_1_fu_1033_p3 when (or_ln21_fu_1041_p2(0) = '1') else
    select_ln21_fu_1015_p3;
  select_ln21_3_fu_1073_p3 <=
    ap_const_lv41_10000000000 when (icmp_ln21_4_fu_1068_p2(0) = '1') else
    ap_const_lv41_1F00000000;
  select_ln21_4_fu_1087_p3 <=
    select_ln21_3_fu_1073_p3 when (or_ln21_1_fu_1081_p2(0) = '1') else
    zext_ln21_fu_1059_p1;
  select_ln21_5_i_fu_1113_p3 <=
    ap_const_lv57_100000000000000 when (icmp_ln21_6_fu_1108_p2(0) = '1') else
    ap_const_lv57_1F000000000000;
  select_ln21_fu_1015_p3 <=
    ap_const_lv25_1F00 when (icmp_ln21_fu_1010_p2(0) = '1') else
    ap_const_lv25_1F;
  sext_ln21_1_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln21_4_fu_1087_p3), 45));

  sext_ln21_fu_1055_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln21_2_fu_1047_p3), 29));


  state_V_address0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state13, icmp_ln891_1_reg_1278, ap_CS_fsm_state9, icmp_ln891_2_reg_1333, ap_CS_fsm_state18, ap_CS_fsm_state24, zext_ln544_27_fu_1169_p1, grp_KeccakF1600_StatePer_fu_432_state_V_6_address0, ap_CS_fsm_state16, ap_CS_fsm_state23, zext_ln544_25_fu_629_p1, zext_ln544_26_fu_714_p1, zext_ln544_28_fu_1006_p1, ap_CS_fsm_state20)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
      state_V_address0 <= zext_ln544_27_fu_1169_p1(5 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then
      state_V_address0 <= ap_const_lv5_10;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then
      state_V_address0 <= zext_ln544_28_fu_1006_p1(5 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then
      state_V_address0 <= zext_ln544_26_fu_714_p1(5 - 1 downto 0);
    elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then
      state_V_address0 <= zext_ln544_25_fu_629_p1(5 - 1 downto 0);
    elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln891_1_reg_1278 = ap_const_lv1_1)))) then
      state_V_address0 <= grp_KeccakF1600_StatePer_fu_432_state_V_6_address0;
    else
      state_V_address0 <= "XXXXX";
    end if;
  end process;


  state_V_address1_assign_proc : process(ap_CS_fsm_state2, state_V_addr_1_reg_1272, icmp_ln891_1_reg_1278, ap_CS_fsm_state7, ap_CS_fsm_state9, state_V_addr_2_reg_1322, ap_CS_fsm_state14, icmp_ln891_2_reg_1333, ap_CS_fsm_state17, state_V_addr_4_reg_1353, ap_CS_fsm_state24, grp_KeccakF1600_StatePer_fu_432_state_V_6_address1, ap_CS_fsm_state16, ap_CS_fsm_state23, zext_ln544_fu_552_p1, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
      state_V_address1 <= ap_const_lv5_10;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then
      state_V_address1 <= state_V_addr_4_reg_1353;
    elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17))) then
      state_V_address1 <= ap_const_lv5_19;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then
      state_V_address1 <= state_V_addr_2_reg_1322;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then
      state_V_address1 <= state_V_addr_1_reg_1272;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then
      state_V_address1 <= zext_ln544_fu_552_p1(5 - 1 downto 0);
    elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln891_1_reg_1278 = ap_const_lv1_1)))) then
      state_V_address1 <= grp_KeccakF1600_StatePer_fu_432_state_V_6_address1;
    else
      state_V_address1 <= "XXXXX";
    end if;
  end process;


  state_V_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state13, icmp_ln891_1_reg_1278, ap_CS_fsm_state9, icmp_ln891_2_reg_1333, ap_CS_fsm_state18, ap_CS_fsm_state24, grp_KeccakF1600_StatePer_fu_432_state_V_6_ce0, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state20)
  begin
    if (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state6))) then
      state_V_ce0 <= ap_const_logic_1;
    elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln891_1_reg_1278 = ap_const_lv1_1)))) then
      state_V_ce0 <= grp_KeccakF1600_StatePer_fu_432_state_V_6_ce0;
    else
      state_V_ce0 <= ap_const_logic_0;
    end if;
  end process;


  state_V_ce1_assign_proc : process(ap_CS_fsm_state2, icmp_ln891_1_reg_1278, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state14, icmp_ln891_2_reg_1333, ap_CS_fsm_state17, ap_CS_fsm_state24, grp_KeccakF1600_StatePer_fu_432_state_V_6_ce1, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
  begin
    if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
      state_V_ce1 <= ap_const_logic_1;
    elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln891_1_reg_1278 = ap_const_lv1_1)))) then
      state_V_ce1 <= grp_KeccakF1600_StatePer_fu_432_state_V_6_ce1;
    else
      state_V_ce1 <= ap_const_logic_0;
    end if;
  end process;


  state_V_d1_assign_proc : process(ap_CS_fsm_state2, icmp_ln891_1_reg_1278, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state14, icmp_ln891_2_reg_1333, ap_CS_fsm_state17, ap_CS_fsm_state24, grp_KeccakF1600_StatePer_fu_432_state_V_6_d1, ap_CS_fsm_state16, ap_CS_fsm_state23, xor_ln719_fu_660_p2, xor_ln719_1_fu_974_p2, zext_ln209_fu_987_p1, ap_CS_fsm_state19, xor_ln719_2_fu_1143_p2, ap_CS_fsm_state20, ap_CS_fsm_state21, xor_ln719_3_fu_1150_p2)
  begin
    if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
      state_V_d1 <= ap_const_lv64_9;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then
      state_V_d1 <= xor_ln719_3_fu_1150_p2;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then
      state_V_d1 <= xor_ln719_2_fu_1143_p2;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then
      state_V_d1 <= zext_ln209_fu_987_p1;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then
      state_V_d1 <= xor_ln719_1_fu_974_p2;
    elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then
      state_V_d1 <= xor_ln719_fu_660_p2;
    elsif (((ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state2))) then
      state_V_d1 <= ap_const_lv64_0;
    elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln891_1_reg_1278 = ap_const_lv1_1)))) then
      state_V_d1 <= grp_KeccakF1600_StatePer_fu_432_state_V_6_d1;
    else
      state_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    end if;
  end process;


  state_V_we1_assign_proc : process(ap_CS_fsm_state2, icmp_ln887_fu_540_p2, icmp_ln891_1_reg_1278, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_CS_fsm_state14, icmp_ln891_2_reg_1333, ap_CS_fsm_state17, ap_CS_fsm_state24, icmp_ln887_8_fu_1157_p2, grp_KeccakF1600_StatePer_fu_432_state_V_6_we1, ap_CS_fsm_state16, ap_CS_fsm_state23, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21)
  begin
    if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_const_logic_1 = ap_CS_fsm_state24) and (icmp_ln887_8_fu_1157_p2 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln887_fu_540_p2 = ap_const_lv1_0)))) then
      state_V_we1 <= ap_const_logic_1;
    elsif (((ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln891_2_reg_1333 = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln891_1_reg_1278 = ap_const_lv1_1)))) then
      state_V_we1 <= grp_KeccakF1600_StatePer_fu_432_state_V_6_we1;
    else
      state_V_we1 <= ap_const_logic_0;
    end if;
  end process;

  tmp_1_fu_806_p9          <= (((((((domain_V & input_V_load_6_reg_1317) & reg_535) & reg_530) & reg_521) & reg_516) & reg_511) & reg_507);
  tmp_4_fu_722_p3          <= (domain_V & reg_507);
  tmp_5_fu_729_p4          <= ((domain_V & reg_511) & reg_507);
  tmp_6_fu_742_p5          <= (((domain_V & reg_516) & reg_511) & reg_507);
  tmp_7_fu_753_p6          <= ((((domain_V & reg_521) & reg_516) & reg_511) & reg_507);
  tmp_9_fu_770_p7          <= (((((domain_V & reg_530) & reg_521) & reg_516) & reg_511) & reg_507);
  tmp_s_fu_785_p8          <= ((((((domain_V & reg_535) & reg_530) & reg_521) & reg_516) & reg_511) & reg_507);
  xor_ln719_1_fu_974_p2    <= (zext_ln117_3_fu_951_p1 xor state_V_q0);
  xor_ln719_2_fu_1143_p2   <= (state_V_q0 xor p_0186_0_i_cast_fu_1139_p1);
  xor_ln719_3_fu_1150_p2   <= (state_V_q0 xor ap_const_lv64_8000000000000000);
  xor_ln719_fu_660_p2      <= (state_V_q0 xor ret_V_23_fu_634_p9);
  zext_ln117_1_fu_891_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln117_1_fu_883_p3), 60));
  zext_ln117_2_fu_925_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln117_4_fu_917_p3), 60));
  zext_ln117_3_fu_951_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln117_6_fu_943_p3), 64));
  zext_ln117_fu_867_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln117_fu_859_p3), 28));
  zext_ln209_fu_987_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_01676_2_i_reg_410), 64));
  zext_ln214_2_fu_738_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_729_p4), 28));
  zext_ln214_3_fu_766_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_753_p6), 44));
  zext_ln214_fu_719_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(domain_V), 12));
  zext_ln215_2_fu_560_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0260_0_i_reg_398), 17));
  zext_ln215_fu_557_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inlen_V), 17));
  zext_ln21_1_fu_1099_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln21_1_fu_1095_p1), 57));
  zext_ln21_fu_1059_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln21_fu_1055_p1), 41));
  zext_ln321_fu_802_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_785_p8), 60));
  zext_ln544_10_fu_585_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0260_0_i_reg_398), 64));
  zext_ln544_11_fu_684_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_457_p2), 64));
  zext_ln544_12_fu_689_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_464_p2), 64));
  zext_ln544_13_fu_694_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_470_p2), 64));
  zext_ln544_14_fu_699_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_476_p2), 64));
  zext_ln544_15_fu_704_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_482_p2), 64));
  zext_ln544_16_fu_709_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_491_p2), 64));
  zext_ln544_17_fu_575_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0260_0_i_reg_398), 64));
  zext_ln544_18_fu_580_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_457_p2), 64));
  zext_ln544_19_fu_593_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_464_p2), 64));
  zext_ln544_20_fu_598_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_470_p2), 64));
  zext_ln544_21_fu_603_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_476_p2), 64));
  zext_ln544_22_fu_608_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_482_p2), 64));
  zext_ln544_23_fu_613_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_491_p2), 64));
  zext_ln544_24_fu_624_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_20_fu_618_p2), 64));
  zext_ln544_25_fu_629_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_497_p4), 64));
  zext_ln544_26_fu_714_p1  <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_497_p4), 64));
  zext_ln544_27_fu_1169_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_421), 64));
  zext_ln544_28_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(r_V_reg_1348), 64));
  zext_ln544_fu_552_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_018_0_reg_387), 64));
  zext_ln700_1_fu_964_p1   <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_fu_958_p2), 9));
  zext_ln700_fu_955_p1     <= std_logic_vector(IEEE.numeric_std.resize(unsigned(len_V_reg_1230), 4));
end behav;
